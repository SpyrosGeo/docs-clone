{"ast":null,"code":"import './polyfill';\nimport Delta from 'quill-delta';\nimport Editor from './editor';\nimport Emitter from './emitter';\nimport Module from './module';\nimport Parchment from 'parchment';\nimport Selection, { Range } from './selection';\nimport extend from 'extend';\nimport logger from './logger';\nimport Theme from './theme';\nlet debug = logger('quill');\n\nclass Quill {\n  static debug(limit) {\n    if (limit === true) {\n      limit = 'log';\n    }\n\n    logger.level(limit);\n  }\n\n  static find(node) {\n    return node.__quill || Parchment.find(node);\n  }\n\n  static import(name) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n\n    return this.imports[name];\n  }\n\n  static register(path, target, overwrite = false) {\n    if (typeof path !== 'string') {\n      let name = path.attrName || path.blotName;\n\n      if (typeof name === 'string') {\n        // register(Blot | Attributor, overwrite)\n        this.register('formats/' + name, path, target);\n      } else {\n        Object.keys(path).forEach(key => {\n          this.register(key, path[key], target);\n        });\n      }\n    } else {\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n\n      this.imports[path] = target;\n\n      if ((path.startsWith('blots/') || path.startsWith('formats/')) && target.blotName !== 'abstract') {\n        Parchment.register(target);\n      } else if (path.startsWith('modules') && typeof target.register === 'function') {\n        target.register();\n      }\n    }\n  }\n\n  constructor(container, options = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n\n    if (this.container == null) {\n      return debug.error('Invalid Quill container', container);\n    }\n\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n\n    let html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    this.container.__quill = this;\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.root.setAttribute('data-gramm', false);\n    this.scrollingContainer = this.options.scrollingContainer || this.root;\n    this.emitter = new Emitter();\n    this.scroll = Parchment.create(this.root, {\n      emitter: this.emitter,\n      whitelist: this.options.formats\n    });\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options);\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, type => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      let range = this.selection.lastRange;\n      let index = range && range.length === 0 ? range.index : undefined;\n      modify.call(this, () => {\n        return this.editor.update(null, mutations, index);\n      }, source);\n    });\n    let contents = this.clipboard.convert(`<div class='ql-editor' style=\"white-space: normal;\">${html}<p><br></p></div>`);\n    this.setContents(contents);\n    this.history.clear();\n\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n\n    if (this.options.readOnly) {\n      this.disable();\n    }\n  }\n\n  addContainer(container, refNode = null) {\n    if (typeof container === 'string') {\n      let className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(index, length, source) {\n    [index, length,, source] = overload(index, length, source);\n    return modify.call(this, () => {\n      return this.editor.deleteText(index, length);\n    }, source, index, -1 * length);\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus() {\n    let scrollTop = this.scrollingContainer.scrollTop;\n    this.selection.focus();\n    this.scrollingContainer.scrollTop = scrollTop;\n    this.scrollIntoView();\n  }\n\n  format(name, value, source = Emitter.sources.API) {\n    return modify.call(this, () => {\n      let range = this.getSelection(true);\n      let change = new Delta();\n\n      if (range == null) {\n        return change;\n      } else if (Parchment.query(name, Parchment.Scope.BLOCK)) {\n        change = this.editor.formatLine(range.index, range.length, {\n          [name]: value\n        });\n      } else if (range.length === 0) {\n        this.selection.format(name, value);\n        return change;\n      } else {\n        change = this.editor.formatText(range.index, range.length, {\n          [name]: value\n        });\n      }\n\n      this.setSelection(range, Emitter.sources.SILENT);\n      return change;\n    }, source);\n  }\n\n  formatLine(index, length, name, value, source) {\n    let formats;\n    [index, length, formats, source] = overload(index, length, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.formatLine(index, length, formats);\n    }, source, index, 0);\n  }\n\n  formatText(index, length, name, value, source) {\n    let formats;\n    [index, length, formats, source] = overload(index, length, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.formatText(index, length, formats);\n    }, source, index, 0);\n  }\n\n  getBounds(index, length = 0) {\n    let bounds;\n\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n\n    let containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index = this.getSelection(true), length = 0) {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    } else {\n      return this.editor.getFormat(index.index, index.length);\n    }\n  }\n\n  getIndex(blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index) {\n    return this.scroll.line(index);\n  }\n\n  getLines(index = 0, length = Number.MAX_VALUE) {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    } else {\n      return this.scroll.lines(index, length);\n    }\n  }\n\n  getModule(name) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus = false) {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n\n    return this.selection.getRange()[0];\n  }\n\n  getText(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(index, embed, value, source = Quill.sources.API) {\n    return modify.call(this, () => {\n      return this.editor.insertEmbed(index, embed, value);\n    }, source, index);\n  }\n\n  insertText(index, text, name, value, source) {\n    let formats;\n    [index,, formats, source] = overload(index, 0, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.insertText(index, text, formats);\n    }, source, index, text.length);\n  }\n\n  isEnabled() {\n    return !this.container.classList.contains('ql-disabled');\n  }\n\n  off() {\n    return this.emitter.off.apply(this.emitter, arguments);\n  }\n\n  on() {\n    return this.emitter.on.apply(this.emitter, arguments);\n  }\n\n  once() {\n    return this.emitter.once.apply(this.emitter, arguments);\n  }\n\n  pasteHTML(index, html, source) {\n    this.clipboard.dangerouslyPasteHTML(index, html, source);\n  }\n\n  removeFormat(index, length, source) {\n    [index, length,, source] = overload(index, length, source);\n    return modify.call(this, () => {\n      return this.editor.removeFormat(index, length);\n    }, source, index);\n  }\n\n  scrollIntoView() {\n    this.selection.scrollIntoView(this.scrollingContainer);\n  }\n\n  setContents(delta, source = Emitter.sources.API) {\n    return modify.call(this, () => {\n      delta = new Delta(delta);\n      let length = this.getLength();\n      let deleted = this.editor.deleteText(0, length);\n      let applied = this.editor.applyDelta(delta);\n      let lastOp = applied.ops[applied.ops.length - 1];\n\n      if (lastOp != null && typeof lastOp.insert === 'string' && lastOp.insert[lastOp.insert.length - 1] === '\\n') {\n        this.editor.deleteText(this.getLength() - 1, 1);\n        applied.delete(1);\n      }\n\n      let ret = deleted.compose(applied);\n      return ret;\n    }, source);\n  }\n\n  setSelection(index, length, source) {\n    if (index == null) {\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      [index, length,, source] = overload(index, length, source);\n      this.selection.setRange(new Range(index, length), source);\n\n      if (source !== Emitter.sources.SILENT) {\n        this.selection.scrollIntoView(this.scrollingContainer);\n      }\n    }\n  }\n\n  setText(text, source = Emitter.sources.API) {\n    let delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source = Emitter.sources.USER) {\n    let change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n\n    this.selection.update(source);\n    return change;\n  }\n\n  updateContents(delta, source = Emitter.sources.API) {\n    return modify.call(this, () => {\n      delta = new Delta(delta);\n      return this.editor.applyDelta(delta, source);\n    }, source, true);\n  }\n\n}\n\nQuill.DEFAULTS = {\n  bounds: null,\n  formats: null,\n  modules: {},\n  placeholder: '',\n  readOnly: false,\n  scrollingContainer: null,\n  strict: true,\n  theme: 'default'\n};\nQuill.events = Emitter.events;\nQuill.sources = Emitter.sources; // eslint-disable-next-line no-undef\n\nQuill.version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\nQuill.imports = {\n  'delta': Delta,\n  'parchment': Parchment,\n  'core/module': Module,\n  'core/theme': Theme\n};\n\nfunction expandConfig(container, userConfig) {\n  userConfig = extend(true, {\n    container: container,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true\n    }\n  }, userConfig);\n\n  if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {\n    userConfig.theme = Theme;\n  } else {\n    userConfig.theme = Quill.import(`themes/${userConfig.theme}`);\n\n    if (userConfig.theme == null) {\n      throw new Error(`Invalid theme ${userConfig.theme}. Did you register it?`);\n    }\n  }\n\n  let themeConfig = extend(true, {}, userConfig.theme.DEFAULTS);\n  [themeConfig, userConfig].forEach(function (config) {\n    config.modules = config.modules || {};\n    Object.keys(config.modules).forEach(function (module) {\n      if (config.modules[module] === true) {\n        config.modules[module] = {};\n      }\n    });\n  });\n  let moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));\n  let moduleConfig = moduleNames.reduce(function (config, name) {\n    let moduleClass = Quill.import(`modules/${name}`);\n\n    if (moduleClass == null) {\n      debug.error(`Cannot load ${name} module. Are you sure you registered it?`);\n    } else {\n      config[name] = moduleClass.DEFAULTS || {};\n    }\n\n    return config;\n  }, {}); // Special case toolbar shorthand\n\n  if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {\n    userConfig.modules.toolbar = {\n      container: userConfig.modules.toolbar\n    };\n  }\n\n  userConfig = extend(true, {}, Quill.DEFAULTS, {\n    modules: moduleConfig\n  }, themeConfig, userConfig);\n  ['bounds', 'container', 'scrollingContainer'].forEach(function (key) {\n    if (typeof userConfig[key] === 'string') {\n      userConfig[key] = document.querySelector(userConfig[key]);\n    }\n  });\n  userConfig.modules = Object.keys(userConfig.modules).reduce(function (config, name) {\n    if (userConfig.modules[name]) {\n      config[name] = userConfig.modules[name];\n    }\n\n    return config;\n  }, {});\n  return userConfig;\n} // Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\n\n\nfunction modify(modifier, source, index, shift) {\n  if (this.options.strict && !this.isEnabled() && source === Emitter.sources.USER) {\n    return new Delta();\n  }\n\n  let range = index == null ? null : this.getSelection();\n  let oldDelta = this.editor.delta;\n  let change = modifier();\n\n  if (range != null) {\n    if (index === true) index = range.index;\n\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      range = shiftRange(range, index, shift, source);\n    }\n\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n\n  if (change.length() > 0) {\n    let args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n\n  return change;\n}\n\nfunction overload(index, length, name, value, source) {\n  let formats = {};\n\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      source = value, value = name, name = length, length = index.length, index = index.index;\n    } else {\n      length = index.length, index = index.index;\n    }\n  } else if (typeof length !== 'number') {\n    source = value, value = name, name = length, length = 0;\n  } // Handle format being object, two format name/value strings or excluded\n\n\n  if (typeof name === 'object') {\n    formats = name;\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      source = name;\n    }\n  } // Handle optional source\n\n\n  source = source || Emitter.sources.API;\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range, index, length, source) {\n  if (range == null) return null;\n  let start, end;\n\n  if (index instanceof Delta) {\n    [start, end] = [range.index, range.index + range.length].map(function (pos) {\n      return index.transformPosition(pos, source !== Emitter.sources.USER);\n    });\n  } else {\n    [start, end] = [range.index, range.index + range.length].map(function (pos) {\n      if (pos < index || pos === index && source === Emitter.sources.USER) return pos;\n\n      if (length >= 0) {\n        return pos + length;\n      } else {\n        return Math.max(index, pos + length);\n      }\n    });\n  }\n\n  return new Range(start, end - start);\n}\n\nexport { expandConfig, overload, Quill as default };","map":{"version":3,"sources":["/home/thatguy/My-repos/Javascript/React/docs-clone/client/node_modules/quill/core/quill.js"],"names":["Delta","Editor","Emitter","Module","Parchment","Selection","Range","extend","logger","Theme","debug","Quill","limit","level","find","node","__quill","import","name","imports","error","register","path","target","overwrite","attrName","blotName","Object","keys","forEach","key","warn","startsWith","constructor","container","options","expandConfig","html","innerHTML","trim","classList","add","root","addContainer","setAttribute","scrollingContainer","emitter","scroll","create","whitelist","formats","editor","selection","theme","keyboard","addModule","clipboard","history","init","on","events","EDITOR_CHANGE","type","TEXT_CHANGE","toggle","isBlank","SCROLL_UPDATE","source","mutations","range","lastRange","index","length","undefined","modify","call","update","contents","convert","setContents","clear","placeholder","readOnly","disable","refNode","className","document","createElement","insertBefore","blur","setRange","deleteText","overload","enable","enabled","focus","scrollTop","scrollIntoView","format","value","sources","API","getSelection","change","query","Scope","BLOCK","formatLine","formatText","setSelection","SILENT","getBounds","bounds","containerBounds","getBoundingClientRect","bottom","top","height","left","right","width","getContents","getLength","getFormat","getIndex","blot","offset","getLeaf","leaf","getLine","line","getLines","Number","MAX_VALUE","lines","getModule","modules","getRange","getText","hasFocus","insertEmbed","embed","insertText","text","isEnabled","contains","off","apply","arguments","once","pasteHTML","dangerouslyPasteHTML","removeFormat","delta","deleted","applied","applyDelta","lastOp","ops","insert","delete","ret","compose","setText","USER","updateContents","DEFAULTS","strict","version","QUILL_VERSION","userConfig","Error","themeConfig","config","module","moduleNames","concat","moduleConfig","reduce","moduleClass","toolbar","querySelector","modifier","shift","oldDelta","shiftRange","args","emit","start","end","map","pos","transformPosition","Math","max","default"],"mappings":"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","sourcesContent":["import './polyfill';\nimport Delta from 'quill-delta';\nimport Editor from './editor';\nimport Emitter from './emitter';\nimport Module from './module';\nimport Parchment from 'parchment';\nimport Selection, { Range } from './selection';\nimport extend from 'extend';\nimport logger from './logger';\nimport Theme from './theme';\n\nlet debug = logger('quill');\n\n\nclass Quill {\n  static debug(limit) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node) {\n    return node.__quill || Parchment.find(node);\n  }\n\n  static import(name) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(path, target, overwrite = false) {\n    if (typeof path !== 'string') {\n      let name = path.attrName || path.blotName;\n      if (typeof name === 'string') {\n        // register(Blot | Attributor, overwrite)\n        this.register('formats/' + name, path, target);\n      } else {\n        Object.keys(path).forEach((key) => {\n          this.register(key, path[key], target);\n        });\n      }\n    } else {\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if ((path.startsWith('blots/') || path.startsWith('formats/')) &&\n          target.blotName !== 'abstract') {\n        Parchment.register(target);\n      } else if (path.startsWith('modules') && typeof target.register === 'function') {\n        target.register();\n      }\n    }\n  }\n\n  constructor(container, options = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      return debug.error('Invalid Quill container', container);\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    let html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    this.container.__quill = this;\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.root.setAttribute('data-gramm', false);\n    this.scrollingContainer = this.options.scrollingContainer || this.root;\n    this.emitter = new Emitter();\n    this.scroll = Parchment.create(this.root, {\n      emitter: this.emitter,\n      whitelist: this.options.formats\n    });\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options);\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, (type) => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      let range = this.selection.lastRange;\n      let index = range && range.length === 0 ? range.index : undefined;\n      modify.call(this, () => {\n        return this.editor.update(null, mutations, index);\n      }, source);\n    });\n    let contents = this.clipboard.convert(`<div class='ql-editor' style=\"white-space: normal;\">${html}<p><br></p></div>`);\n    this.setContents(contents);\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n  }\n\n  addContainer(container, refNode = null) {\n    if (typeof container === 'string') {\n      let className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(index, length, source) {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(this, () => {\n      return this.editor.deleteText(index, length);\n    }, source, index, -1*length);\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus() {\n    let scrollTop = this.scrollingContainer.scrollTop;\n    this.selection.focus();\n    this.scrollingContainer.scrollTop = scrollTop;\n    this.scrollIntoView();\n  }\n\n  format(name, value, source = Emitter.sources.API) {\n    return modify.call(this, () => {\n      let range = this.getSelection(true);\n      let change = new Delta();\n      if (range == null) {\n        return change;\n      } else if (Parchment.query(name, Parchment.Scope.BLOCK)) {\n        change = this.editor.formatLine(range.index, range.length, { [name]: value });\n      } else if (range.length === 0) {\n        this.selection.format(name, value);\n        return change;\n      } else {\n        change = this.editor.formatText(range.index, range.length, { [name]: value });\n      }\n      this.setSelection(range, Emitter.sources.SILENT);\n      return change;\n    }, source);\n  }\n\n  formatLine(index, length, name, value, source) {\n    let formats;\n    [index, length, formats, source] = overload(index, length, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.formatLine(index, length, formats);\n    }, source, index, 0);\n  }\n\n  formatText(index, length, name, value, source) {\n    let formats;\n    [index, length, formats, source] = overload(index, length, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.formatText(index, length, formats);\n    }, source, index, 0);\n  }\n\n  getBounds(index, length = 0) {\n    let bounds;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    let containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index = this.getSelection(true), length = 0) {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    } else {\n      return this.editor.getFormat(index.index, index.length);\n    }\n  }\n\n  getIndex(blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index) {\n    return this.scroll.line(index);\n  }\n\n  getLines(index = 0, length = Number.MAX_VALUE) {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    } else {\n      return this.scroll.lines(index, length);\n    }\n  }\n\n  getModule(name) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus = false) {\n    if (focus) this.focus();\n    this.update();  // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getText(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(index, embed, value, source = Quill.sources.API) {\n    return modify.call(this, () => {\n      return this.editor.insertEmbed(index, embed, value);\n    }, source, index);\n  }\n\n  insertText(index, text, name, value, source) {\n    let formats;\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(this, () => {\n      return this.editor.insertText(index, text, formats);\n    }, source, index, text.length);\n  }\n\n  isEnabled() {\n    return !this.container.classList.contains('ql-disabled');\n  }\n\n  off() {\n    return this.emitter.off.apply(this.emitter, arguments);\n  }\n\n  on() {\n    return this.emitter.on.apply(this.emitter, arguments);\n  }\n\n  once() {\n    return this.emitter.once.apply(this.emitter, arguments);\n  }\n\n  pasteHTML(index, html, source) {\n    this.clipboard.dangerouslyPasteHTML(index, html, source);\n  }\n\n  removeFormat(index, length, source) {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(this, () => {\n      return this.editor.removeFormat(index, length);\n    }, source, index);\n  }\n\n  scrollIntoView() {\n    this.selection.scrollIntoView(this.scrollingContainer);\n  }\n\n  setContents(delta, source = Emitter.sources.API) {\n    return modify.call(this, () => {\n      delta = new Delta(delta);\n      let length = this.getLength();\n      let deleted = this.editor.deleteText(0, length);\n      let applied = this.editor.applyDelta(delta);\n      let lastOp = applied.ops[applied.ops.length - 1];\n      if (lastOp != null && typeof(lastOp.insert) === 'string' && lastOp.insert[lastOp.insert.length-1] === '\\n') {\n        this.editor.deleteText(this.getLength() - 1, 1);\n        applied.delete(1);\n      }\n      let ret = deleted.compose(applied);\n      return ret;\n    }, source);\n  }\n\n  setSelection(index, length, source) {\n    if (index == null) {\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(index, length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.selection.scrollIntoView(this.scrollingContainer);\n      }\n    }\n  }\n\n  setText(text, source = Emitter.sources.API) {\n    let delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source = Emitter.sources.USER) {\n    let change = this.scroll.update(source);   // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    return change;\n  }\n\n  updateContents(delta, source = Emitter.sources.API) {\n    return modify.call(this, () => {\n      delta = new Delta(delta);\n      return this.editor.applyDelta(delta, source);\n    }, source, true);\n  }\n}\nQuill.DEFAULTS = {\n  bounds: null,\n  formats: null,\n  modules: {},\n  placeholder: '',\n  readOnly: false,\n  scrollingContainer: null,\n  strict: true,\n  theme: 'default'\n};\nQuill.events = Emitter.events;\nQuill.sources = Emitter.sources;\n// eslint-disable-next-line no-undef\nQuill.version = typeof(QUILL_VERSION) === 'undefined' ? 'dev' : QUILL_VERSION;\n\nQuill.imports = {\n  'delta'       : Delta,\n  'parchment'   : Parchment,\n  'core/module' : Module,\n  'core/theme'  : Theme\n};\n\n\nfunction expandConfig(container, userConfig) {\n  userConfig = extend(true, {\n    container: container,\n    modules: {\n      clipboard: true,\n      keyboard: true,\n      history: true\n    }\n  }, userConfig);\n  if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {\n    userConfig.theme = Theme;\n  } else {\n    userConfig.theme = Quill.import(`themes/${userConfig.theme}`);\n    if (userConfig.theme == null) {\n      throw new Error(`Invalid theme ${userConfig.theme}. Did you register it?`);\n    }\n  }\n  let themeConfig = extend(true, {}, userConfig.theme.DEFAULTS);\n  [themeConfig, userConfig].forEach(function(config) {\n    config.modules = config.modules || {};\n    Object.keys(config.modules).forEach(function(module) {\n      if (config.modules[module] === true) {\n        config.modules[module] = {};\n      }\n    });\n  });\n  let moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));\n  let moduleConfig = moduleNames.reduce(function(config, name) {\n    let moduleClass = Quill.import(`modules/${name}`);\n    if (moduleClass == null) {\n      debug.error(`Cannot load ${name} module. Are you sure you registered it?`);\n    } else {\n      config[name] = moduleClass.DEFAULTS || {};\n    }\n    return config;\n  }, {});\n  // Special case toolbar shorthand\n  if (userConfig.modules != null && userConfig.modules.toolbar &&\n      userConfig.modules.toolbar.constructor !== Object) {\n    userConfig.modules.toolbar = {\n      container: userConfig.modules.toolbar\n    };\n  }\n  userConfig = extend(true, {}, Quill.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);\n  ['bounds', 'container', 'scrollingContainer'].forEach(function(key) {\n    if (typeof userConfig[key] === 'string') {\n      userConfig[key] = document.querySelector(userConfig[key]);\n    }\n  });\n  userConfig.modules = Object.keys(userConfig.modules).reduce(function(config, name) {\n    if (userConfig.modules[name]) {\n      config[name] = userConfig.modules[name];\n    }\n    return config;\n  }, {});\n  return userConfig;\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(modifier, source, index, shift) {\n  if (this.options.strict && !this.isEnabled() && source === Emitter.sources.USER) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  let oldDelta = this.editor.delta;\n  let change = modifier();\n  if (range != null) {\n    if (index === true) index = range.index;\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    let args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\nfunction overload(index, length, name, value, source) {\n  let formats = {};\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      source = value, value = name, name = length, length = index.length, index = index.index;\n    } else {\n      length = index.length, index = index.index;\n    }\n  } else if (typeof length !== 'number') {\n    source = value, value = name, name = length, length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    formats = name;\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range, index, length, source) {\n  if (range == null) return null;\n  let start, end;\n  if (index instanceof Delta) {\n    [start, end] = [range.index, range.index + range.length].map(function(pos) {\n      return index.transformPosition(pos, source !== Emitter.sources.USER);\n    });\n  } else {\n    [start, end] = [range.index, range.index + range.length].map(function(pos) {\n      if (pos < index || (pos === index && source === Emitter.sources.USER)) return pos;\n      if (length >= 0) {\n        return pos + length;\n      } else {\n        return Math.max(index, pos + length);\n      }\n    });\n  }\n  return new Range(start, end - start);\n}\n\n\nexport { expandConfig, overload, Quill as default };\n"]},"metadata":{},"sourceType":"module"}