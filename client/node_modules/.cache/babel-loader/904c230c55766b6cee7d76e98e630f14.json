{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"Parchment\"] = factory();else root[\"Parchment\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 9);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var ParchmentError =\n      /** @class */\n      function (_super) {\n        __extends(ParchmentError, _super);\n\n        function ParchmentError(message) {\n          var _this = this;\n\n          message = '[Parchment] ' + message;\n          _this = _super.call(this, message) || this;\n          _this.message = message;\n          _this.name = _this.constructor.name;\n          return _this;\n        }\n\n        return ParchmentError;\n      }(Error);\n\n      exports.ParchmentError = ParchmentError;\n      var attributes = {};\n      var classes = {};\n      var tags = {};\n      var types = {};\n      exports.DATA_KEY = '__blot';\n      var Scope;\n\n      (function (Scope) {\n        Scope[Scope[\"TYPE\"] = 3] = \"TYPE\";\n        Scope[Scope[\"LEVEL\"] = 12] = \"LEVEL\";\n        Scope[Scope[\"ATTRIBUTE\"] = 13] = \"ATTRIBUTE\";\n        Scope[Scope[\"BLOT\"] = 14] = \"BLOT\";\n        Scope[Scope[\"INLINE\"] = 7] = \"INLINE\";\n        Scope[Scope[\"BLOCK\"] = 11] = \"BLOCK\";\n        Scope[Scope[\"BLOCK_BLOT\"] = 10] = \"BLOCK_BLOT\";\n        Scope[Scope[\"INLINE_BLOT\"] = 6] = \"INLINE_BLOT\";\n        Scope[Scope[\"BLOCK_ATTRIBUTE\"] = 9] = \"BLOCK_ATTRIBUTE\";\n        Scope[Scope[\"INLINE_ATTRIBUTE\"] = 5] = \"INLINE_ATTRIBUTE\";\n        Scope[Scope[\"ANY\"] = 15] = \"ANY\";\n      })(Scope = exports.Scope || (exports.Scope = {}));\n\n      function create(input, value) {\n        var match = query(input);\n\n        if (match == null) {\n          throw new ParchmentError(\"Unable to create \" + input + \" blot\");\n        }\n\n        var BlotClass = match;\n        var node = // @ts-ignore\n        input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);\n        return new BlotClass(node, value);\n      }\n\n      exports.create = create;\n\n      function find(node, bubble) {\n        if (bubble === void 0) {\n          bubble = false;\n        }\n\n        if (node == null) return null; // @ts-ignore\n\n        if (node[exports.DATA_KEY] != null) return node[exports.DATA_KEY].blot;\n        if (bubble) return find(node.parentNode, bubble);\n        return null;\n      }\n\n      exports.find = find;\n\n      function query(query, scope) {\n        if (scope === void 0) {\n          scope = Scope.ANY;\n        }\n\n        var match;\n\n        if (typeof query === 'string') {\n          match = types[query] || attributes[query]; // @ts-ignore\n        } else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {\n          match = types['text'];\n        } else if (typeof query === 'number') {\n          if (query & Scope.LEVEL & Scope.BLOCK) {\n            match = types['block'];\n          } else if (query & Scope.LEVEL & Scope.INLINE) {\n            match = types['inline'];\n          }\n        } else if (query instanceof HTMLElement) {\n          var names = (query.getAttribute('class') || '').split(/\\s+/);\n\n          for (var i in names) {\n            match = classes[names[i]];\n            if (match) break;\n          }\n\n          match = match || tags[query.tagName];\n        }\n\n        if (match == null) return null; // @ts-ignore\n\n        if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope) return match;\n        return null;\n      }\n\n      exports.query = query;\n\n      function register() {\n        var Definitions = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          Definitions[_i] = arguments[_i];\n        }\n\n        if (Definitions.length > 1) {\n          return Definitions.map(function (d) {\n            return register(d);\n          });\n        }\n\n        var Definition = Definitions[0];\n\n        if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {\n          throw new ParchmentError('Invalid definition');\n        } else if (Definition.blotName === 'abstract') {\n          throw new ParchmentError('Cannot register abstract class');\n        }\n\n        types[Definition.blotName || Definition.attrName] = Definition;\n\n        if (typeof Definition.keyName === 'string') {\n          attributes[Definition.keyName] = Definition;\n        } else {\n          if (Definition.className != null) {\n            classes[Definition.className] = Definition;\n          }\n\n          if (Definition.tagName != null) {\n            if (Array.isArray(Definition.tagName)) {\n              Definition.tagName = Definition.tagName.map(function (tagName) {\n                return tagName.toUpperCase();\n              });\n            } else {\n              Definition.tagName = Definition.tagName.toUpperCase();\n            }\n\n            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];\n            tagNames.forEach(function (tag) {\n              if (tags[tag] == null || Definition.className == null) {\n                tags[tag] = Definition;\n              }\n            });\n          }\n        }\n\n        return Definition;\n      }\n\n      exports.register = register;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var Registry = __webpack_require__(0);\n\n      var Attributor =\n      /** @class */\n      function () {\n        function Attributor(attrName, keyName, options) {\n          if (options === void 0) {\n            options = {};\n          }\n\n          this.attrName = attrName;\n          this.keyName = keyName;\n          var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;\n\n          if (options.scope != null) {\n            // Ignore type bits, force attribute bit\n            this.scope = options.scope & Registry.Scope.LEVEL | attributeBit;\n          } else {\n            this.scope = Registry.Scope.ATTRIBUTE;\n          }\n\n          if (options.whitelist != null) this.whitelist = options.whitelist;\n        }\n\n        Attributor.keys = function (node) {\n          return [].map.call(node.attributes, function (item) {\n            return item.name;\n          });\n        };\n\n        Attributor.prototype.add = function (node, value) {\n          if (!this.canAdd(node, value)) return false;\n          node.setAttribute(this.keyName, value);\n          return true;\n        };\n\n        Attributor.prototype.canAdd = function (node, value) {\n          var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));\n          if (match == null) return false;\n          if (this.whitelist == null) return true;\n\n          if (typeof value === 'string') {\n            return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n          } else {\n            return this.whitelist.indexOf(value) > -1;\n          }\n        };\n\n        Attributor.prototype.remove = function (node) {\n          node.removeAttribute(this.keyName);\n        };\n\n        Attributor.prototype.value = function (node) {\n          var value = node.getAttribute(this.keyName);\n\n          if (this.canAdd(node, value) && value) {\n            return value;\n          }\n\n          return '';\n        };\n\n        return Attributor;\n      }();\n\n      exports.default = Attributor;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var linked_list_1 = __webpack_require__(11);\n\n      var shadow_1 = __webpack_require__(5);\n\n      var Registry = __webpack_require__(0);\n\n      var ContainerBlot =\n      /** @class */\n      function (_super) {\n        __extends(ContainerBlot, _super);\n\n        function ContainerBlot(domNode) {\n          var _this = _super.call(this, domNode) || this;\n\n          _this.build();\n\n          return _this;\n        }\n\n        ContainerBlot.prototype.appendChild = function (other) {\n          this.insertBefore(other);\n        };\n\n        ContainerBlot.prototype.attach = function () {\n          _super.prototype.attach.call(this);\n\n          this.children.forEach(function (child) {\n            child.attach();\n          });\n        };\n\n        ContainerBlot.prototype.build = function () {\n          var _this = this;\n\n          this.children = new linked_list_1.default(); // Need to be reversed for if DOM nodes already in order\n\n          [].slice.call(this.domNode.childNodes).reverse().forEach(function (node) {\n            try {\n              var child = makeBlot(node);\n\n              _this.insertBefore(child, _this.children.head || undefined);\n            } catch (err) {\n              if (err instanceof Registry.ParchmentError) return;else throw err;\n            }\n          });\n        };\n\n        ContainerBlot.prototype.deleteAt = function (index, length) {\n          if (index === 0 && length === this.length()) {\n            return this.remove();\n          }\n\n          this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n          });\n        };\n\n        ContainerBlot.prototype.descendant = function (criteria, index) {\n          var _a = this.children.find(index),\n              child = _a[0],\n              offset = _a[1];\n\n          if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {\n            return [child, offset];\n          } else if (child instanceof ContainerBlot) {\n            return child.descendant(criteria, offset);\n          } else {\n            return [null, -1];\n          }\n        };\n\n        ContainerBlot.prototype.descendants = function (criteria, index, length) {\n          if (index === void 0) {\n            index = 0;\n          }\n\n          if (length === void 0) {\n            length = Number.MAX_VALUE;\n          }\n\n          var descendants = [];\n          var lengthLeft = length;\n          this.children.forEachAt(index, length, function (child, index, length) {\n            if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {\n              descendants.push(child);\n            }\n\n            if (child instanceof ContainerBlot) {\n              descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));\n            }\n\n            lengthLeft -= length;\n          });\n          return descendants;\n        };\n\n        ContainerBlot.prototype.detach = function () {\n          this.children.forEach(function (child) {\n            child.detach();\n          });\n\n          _super.prototype.detach.call(this);\n        };\n\n        ContainerBlot.prototype.formatAt = function (index, length, name, value) {\n          this.children.forEachAt(index, length, function (child, offset, length) {\n            child.formatAt(offset, length, name, value);\n          });\n        };\n\n        ContainerBlot.prototype.insertAt = function (index, value, def) {\n          var _a = this.children.find(index),\n              child = _a[0],\n              offset = _a[1];\n\n          if (child) {\n            child.insertAt(offset, value, def);\n          } else {\n            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n            this.appendChild(blot);\n          }\n        };\n\n        ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {\n          if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function (child) {\n            return childBlot instanceof child;\n          })) {\n            throw new Registry.ParchmentError(\"Cannot insert \" + childBlot.statics.blotName + \" into \" + this.statics.blotName);\n          }\n\n          childBlot.insertInto(this, refBlot);\n        };\n\n        ContainerBlot.prototype.length = function () {\n          return this.children.reduce(function (memo, child) {\n            return memo + child.length();\n          }, 0);\n        };\n\n        ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {\n          this.children.forEach(function (child) {\n            targetParent.insertBefore(child, refNode);\n          });\n        };\n\n        ContainerBlot.prototype.optimize = function (context) {\n          _super.prototype.optimize.call(this, context);\n\n          if (this.children.length === 0) {\n            if (this.statics.defaultChild != null) {\n              var child = Registry.create(this.statics.defaultChild);\n              this.appendChild(child);\n              child.optimize(context);\n            } else {\n              this.remove();\n            }\n          }\n        };\n\n        ContainerBlot.prototype.path = function (index, inclusive) {\n          if (inclusive === void 0) {\n            inclusive = false;\n          }\n\n          var _a = this.children.find(index, inclusive),\n              child = _a[0],\n              offset = _a[1];\n\n          var position = [[this, index]];\n\n          if (child instanceof ContainerBlot) {\n            return position.concat(child.path(offset, inclusive));\n          } else if (child != null) {\n            position.push([child, offset]);\n          }\n\n          return position;\n        };\n\n        ContainerBlot.prototype.removeChild = function (child) {\n          this.children.remove(child);\n        };\n\n        ContainerBlot.prototype.replace = function (target) {\n          if (target instanceof ContainerBlot) {\n            target.moveChildren(this);\n          }\n\n          _super.prototype.replace.call(this, target);\n        };\n\n        ContainerBlot.prototype.split = function (index, force) {\n          if (force === void 0) {\n            force = false;\n          }\n\n          if (!force) {\n            if (index === 0) return this;\n            if (index === this.length()) return this.next;\n          }\n\n          var after = this.clone();\n          this.parent.insertBefore(after, this.next);\n          this.children.forEachAt(index, this.length(), function (child, offset, length) {\n            child = child.split(offset, force);\n            after.appendChild(child);\n          });\n          return after;\n        };\n\n        ContainerBlot.prototype.unwrap = function () {\n          this.moveChildren(this.parent, this.next);\n          this.remove();\n        };\n\n        ContainerBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n\n          var addedNodes = [];\n          var removedNodes = [];\n          mutations.forEach(function (mutation) {\n            if (mutation.target === _this.domNode && mutation.type === 'childList') {\n              addedNodes.push.apply(addedNodes, mutation.addedNodes);\n              removedNodes.push.apply(removedNodes, mutation.removedNodes);\n            }\n          });\n          removedNodes.forEach(function (node) {\n            // Check node has actually been removed\n            // One exception is Chrome does not immediately remove IFRAMEs\n            // from DOM but MutationRecord is correct in its reported removal\n            if (node.parentNode != null && // @ts-ignore\n            node.tagName !== 'IFRAME' && document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n              return;\n            }\n\n            var blot = Registry.find(node);\n            if (blot == null) return;\n\n            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {\n              blot.detach();\n            }\n          });\n          addedNodes.filter(function (node) {\n            return node.parentNode == _this.domNode;\n          }).sort(function (a, b) {\n            if (a === b) return 0;\n\n            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n              return 1;\n            }\n\n            return -1;\n          }).forEach(function (node) {\n            var refBlot = null;\n\n            if (node.nextSibling != null) {\n              refBlot = Registry.find(node.nextSibling);\n            }\n\n            var blot = makeBlot(node);\n\n            if (blot.next != refBlot || blot.next == null) {\n              if (blot.parent != null) {\n                blot.parent.removeChild(_this);\n              }\n\n              _this.insertBefore(blot, refBlot || undefined);\n            }\n          });\n        };\n\n        return ContainerBlot;\n      }(shadow_1.default);\n\n      function makeBlot(node) {\n        var blot = Registry.find(node);\n\n        if (blot == null) {\n          try {\n            blot = Registry.create(node);\n          } catch (e) {\n            blot = Registry.create(Registry.Scope.INLINE);\n            [].slice.call(node.childNodes).forEach(function (child) {\n              // @ts-ignore\n              blot.domNode.appendChild(child);\n            });\n\n            if (node.parentNode) {\n              node.parentNode.replaceChild(blot.domNode, node);\n            }\n\n            blot.attach();\n          }\n        }\n\n        return blot;\n      }\n\n      exports.default = ContainerBlot;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var attributor_1 = __webpack_require__(1);\n\n      var store_1 = __webpack_require__(6);\n\n      var container_1 = __webpack_require__(2);\n\n      var Registry = __webpack_require__(0);\n\n      var FormatBlot =\n      /** @class */\n      function (_super) {\n        __extends(FormatBlot, _super);\n\n        function FormatBlot(domNode) {\n          var _this = _super.call(this, domNode) || this;\n\n          _this.attributes = new store_1.default(_this.domNode);\n          return _this;\n        }\n\n        FormatBlot.formats = function (domNode) {\n          if (typeof this.tagName === 'string') {\n            return true;\n          } else if (Array.isArray(this.tagName)) {\n            return domNode.tagName.toLowerCase();\n          }\n\n          return undefined;\n        };\n\n        FormatBlot.prototype.format = function (name, value) {\n          var format = Registry.query(name);\n\n          if (format instanceof attributor_1.default) {\n            this.attributes.attribute(format, value);\n          } else if (value) {\n            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {\n              this.replaceWith(name, value);\n            }\n          }\n        };\n\n        FormatBlot.prototype.formats = function () {\n          var formats = this.attributes.values();\n          var format = this.statics.formats(this.domNode);\n\n          if (format != null) {\n            formats[this.statics.blotName] = format;\n          }\n\n          return formats;\n        };\n\n        FormatBlot.prototype.replaceWith = function (name, value) {\n          var replacement = _super.prototype.replaceWith.call(this, name, value);\n\n          this.attributes.copy(replacement);\n          return replacement;\n        };\n\n        FormatBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n\n          _super.prototype.update.call(this, mutations, context);\n\n          if (mutations.some(function (mutation) {\n            return mutation.target === _this.domNode && mutation.type === 'attributes';\n          })) {\n            this.attributes.build();\n          }\n        };\n\n        FormatBlot.prototype.wrap = function (name, value) {\n          var wrapper = _super.prototype.wrap.call(this, name, value);\n\n          if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {\n            this.attributes.move(wrapper);\n          }\n\n          return wrapper;\n        };\n\n        return FormatBlot;\n      }(container_1.default);\n\n      exports.default = FormatBlot;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var shadow_1 = __webpack_require__(5);\n\n      var Registry = __webpack_require__(0);\n\n      var LeafBlot =\n      /** @class */\n      function (_super) {\n        __extends(LeafBlot, _super);\n\n        function LeafBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        LeafBlot.value = function (domNode) {\n          return true;\n        };\n\n        LeafBlot.prototype.index = function (node, offset) {\n          if (this.domNode === node || this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            return Math.min(offset, 1);\n          }\n\n          return -1;\n        };\n\n        LeafBlot.prototype.position = function (index, inclusive) {\n          var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);\n          if (index > 0) offset += 1;\n          return [this.parent.domNode, offset];\n        };\n\n        LeafBlot.prototype.value = function () {\n          return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;\n\n          var _a;\n        };\n\n        LeafBlot.scope = Registry.Scope.INLINE_BLOT;\n        return LeafBlot;\n      }(shadow_1.default);\n\n      exports.default = LeafBlot;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var Registry = __webpack_require__(0);\n\n      var ShadowBlot =\n      /** @class */\n      function () {\n        function ShadowBlot(domNode) {\n          this.domNode = domNode; // @ts-ignore\n\n          this.domNode[Registry.DATA_KEY] = {\n            blot: this\n          };\n        }\n\n        Object.defineProperty(ShadowBlot.prototype, \"statics\", {\n          // Hack for accessing inherited static methods\n          get: function () {\n            return this.constructor;\n          },\n          enumerable: true,\n          configurable: true\n        });\n\n        ShadowBlot.create = function (value) {\n          if (this.tagName == null) {\n            throw new Registry.ParchmentError('Blot definition missing tagName');\n          }\n\n          var node;\n\n          if (Array.isArray(this.tagName)) {\n            if (typeof value === 'string') {\n              value = value.toUpperCase();\n\n              if (parseInt(value).toString() === value) {\n                value = parseInt(value);\n              }\n            }\n\n            if (typeof value === 'number') {\n              node = document.createElement(this.tagName[value - 1]);\n            } else if (this.tagName.indexOf(value) > -1) {\n              node = document.createElement(value);\n            } else {\n              node = document.createElement(this.tagName[0]);\n            }\n          } else {\n            node = document.createElement(this.tagName);\n          }\n\n          if (this.className) {\n            node.classList.add(this.className);\n          }\n\n          return node;\n        };\n\n        ShadowBlot.prototype.attach = function () {\n          if (this.parent != null) {\n            this.scroll = this.parent.scroll;\n          }\n        };\n\n        ShadowBlot.prototype.clone = function () {\n          var domNode = this.domNode.cloneNode(false);\n          return Registry.create(domNode);\n        };\n\n        ShadowBlot.prototype.detach = function () {\n          if (this.parent != null) this.parent.removeChild(this); // @ts-ignore\n\n          delete this.domNode[Registry.DATA_KEY];\n        };\n\n        ShadowBlot.prototype.deleteAt = function (index, length) {\n          var blot = this.isolate(index, length);\n          blot.remove();\n        };\n\n        ShadowBlot.prototype.formatAt = function (index, length, name, value) {\n          var blot = this.isolate(index, length);\n\n          if (Registry.query(name, Registry.Scope.BLOT) != null && value) {\n            blot.wrap(name, value);\n          } else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {\n            var parent_1 = Registry.create(this.statics.scope);\n            blot.wrap(parent_1);\n            parent_1.format(name, value);\n          }\n        };\n\n        ShadowBlot.prototype.insertAt = function (index, value, def) {\n          var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n          var ref = this.split(index);\n          this.parent.insertBefore(blot, ref);\n        };\n\n        ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {\n          if (refBlot === void 0) {\n            refBlot = null;\n          }\n\n          if (this.parent != null) {\n            this.parent.children.remove(this);\n          }\n\n          var refDomNode = null;\n          parentBlot.children.insertBefore(this, refBlot);\n\n          if (refBlot != null) {\n            refDomNode = refBlot.domNode;\n          }\n\n          if (this.domNode.parentNode != parentBlot.domNode || this.domNode.nextSibling != refDomNode) {\n            parentBlot.domNode.insertBefore(this.domNode, refDomNode);\n          }\n\n          this.parent = parentBlot;\n          this.attach();\n        };\n\n        ShadowBlot.prototype.isolate = function (index, length) {\n          var target = this.split(index);\n          target.split(length);\n          return target;\n        };\n\n        ShadowBlot.prototype.length = function () {\n          return 1;\n        };\n\n        ShadowBlot.prototype.offset = function (root) {\n          if (root === void 0) {\n            root = this.parent;\n          }\n\n          if (this.parent == null || this == root) return 0;\n          return this.parent.children.offset(this) + this.parent.offset(root);\n        };\n\n        ShadowBlot.prototype.optimize = function (context) {\n          // TODO clean up once we use WeakMap\n          // @ts-ignore\n          if (this.domNode[Registry.DATA_KEY] != null) {\n            // @ts-ignore\n            delete this.domNode[Registry.DATA_KEY].mutations;\n          }\n        };\n\n        ShadowBlot.prototype.remove = function () {\n          if (this.domNode.parentNode != null) {\n            this.domNode.parentNode.removeChild(this.domNode);\n          }\n\n          this.detach();\n        };\n\n        ShadowBlot.prototype.replace = function (target) {\n          if (target.parent == null) return;\n          target.parent.insertBefore(this, target.next);\n          target.remove();\n        };\n\n        ShadowBlot.prototype.replaceWith = function (name, value) {\n          var replacement = typeof name === 'string' ? Registry.create(name, value) : name;\n          replacement.replace(this);\n          return replacement;\n        };\n\n        ShadowBlot.prototype.split = function (index, force) {\n          return index === 0 ? this : this.next;\n        };\n\n        ShadowBlot.prototype.update = function (mutations, context) {// Nothing to do by default\n        };\n\n        ShadowBlot.prototype.wrap = function (name, value) {\n          var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;\n\n          if (this.parent != null) {\n            this.parent.insertBefore(wrapper, this.next);\n          }\n\n          wrapper.appendChild(this);\n          return wrapper;\n        };\n\n        ShadowBlot.blotName = 'abstract';\n        return ShadowBlot;\n      }();\n\n      exports.default = ShadowBlot;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var attributor_1 = __webpack_require__(1);\n\n      var class_1 = __webpack_require__(7);\n\n      var style_1 = __webpack_require__(8);\n\n      var Registry = __webpack_require__(0);\n\n      var AttributorStore =\n      /** @class */\n      function () {\n        function AttributorStore(domNode) {\n          this.attributes = {};\n          this.domNode = domNode;\n          this.build();\n        }\n\n        AttributorStore.prototype.attribute = function (attribute, value) {\n          // verb\n          if (value) {\n            if (attribute.add(this.domNode, value)) {\n              if (attribute.value(this.domNode) != null) {\n                this.attributes[attribute.attrName] = attribute;\n              } else {\n                delete this.attributes[attribute.attrName];\n              }\n            }\n          } else {\n            attribute.remove(this.domNode);\n            delete this.attributes[attribute.attrName];\n          }\n        };\n\n        AttributorStore.prototype.build = function () {\n          var _this = this;\n\n          this.attributes = {};\n          var attributes = attributor_1.default.keys(this.domNode);\n          var classes = class_1.default.keys(this.domNode);\n          var styles = style_1.default.keys(this.domNode);\n          attributes.concat(classes).concat(styles).forEach(function (name) {\n            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);\n\n            if (attr instanceof attributor_1.default) {\n              _this.attributes[attr.attrName] = attr;\n            }\n          });\n        };\n\n        AttributorStore.prototype.copy = function (target) {\n          var _this = this;\n\n          Object.keys(this.attributes).forEach(function (key) {\n            var value = _this.attributes[key].value(_this.domNode);\n\n            target.format(key, value);\n          });\n        };\n\n        AttributorStore.prototype.move = function (target) {\n          var _this = this;\n\n          this.copy(target);\n          Object.keys(this.attributes).forEach(function (key) {\n            _this.attributes[key].remove(_this.domNode);\n          });\n          this.attributes = {};\n        };\n\n        AttributorStore.prototype.values = function () {\n          var _this = this;\n\n          return Object.keys(this.attributes).reduce(function (attributes, name) {\n            attributes[name] = _this.attributes[name].value(_this.domNode);\n            return attributes;\n          }, {});\n        };\n\n        return AttributorStore;\n      }();\n\n      exports.default = AttributorStore;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var attributor_1 = __webpack_require__(1);\n\n      function match(node, prefix) {\n        var className = node.getAttribute('class') || '';\n        return className.split(/\\s+/).filter(function (name) {\n          return name.indexOf(prefix + \"-\") === 0;\n        });\n      }\n\n      var ClassAttributor =\n      /** @class */\n      function (_super) {\n        __extends(ClassAttributor, _super);\n\n        function ClassAttributor() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        ClassAttributor.keys = function (node) {\n          return (node.getAttribute('class') || '').split(/\\s+/).map(function (name) {\n            return name.split('-').slice(0, -1).join('-');\n          });\n        };\n\n        ClassAttributor.prototype.add = function (node, value) {\n          if (!this.canAdd(node, value)) return false;\n          this.remove(node);\n          node.classList.add(this.keyName + \"-\" + value);\n          return true;\n        };\n\n        ClassAttributor.prototype.remove = function (node) {\n          var matches = match(node, this.keyName);\n          matches.forEach(function (name) {\n            node.classList.remove(name);\n          });\n\n          if (node.classList.length === 0) {\n            node.removeAttribute('class');\n          }\n        };\n\n        ClassAttributor.prototype.value = function (node) {\n          var result = match(node, this.keyName)[0] || '';\n          var value = result.slice(this.keyName.length + 1); // +1 for hyphen\n\n          return this.canAdd(node, value) ? value : '';\n        };\n\n        return ClassAttributor;\n      }(attributor_1.default);\n\n      exports.default = ClassAttributor;\n      /***/\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var attributor_1 = __webpack_require__(1);\n\n      function camelize(name) {\n        var parts = name.split('-');\n        var rest = parts.slice(1).map(function (part) {\n          return part[0].toUpperCase() + part.slice(1);\n        }).join('');\n        return parts[0] + rest;\n      }\n\n      var StyleAttributor =\n      /** @class */\n      function (_super) {\n        __extends(StyleAttributor, _super);\n\n        function StyleAttributor() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        StyleAttributor.keys = function (node) {\n          return (node.getAttribute('style') || '').split(';').map(function (value) {\n            var arr = value.split(':');\n            return arr[0].trim();\n          });\n        };\n\n        StyleAttributor.prototype.add = function (node, value) {\n          if (!this.canAdd(node, value)) return false; // @ts-ignore\n\n          node.style[camelize(this.keyName)] = value;\n          return true;\n        };\n\n        StyleAttributor.prototype.remove = function (node) {\n          // @ts-ignore\n          node.style[camelize(this.keyName)] = '';\n\n          if (!node.getAttribute('style')) {\n            node.removeAttribute('style');\n          }\n        };\n\n        StyleAttributor.prototype.value = function (node) {\n          // @ts-ignore\n          var value = node.style[camelize(this.keyName)];\n          return this.canAdd(node, value) ? value : '';\n        };\n\n        return StyleAttributor;\n      }(attributor_1.default);\n\n      exports.default = StyleAttributor;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      module.exports = __webpack_require__(10);\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var container_1 = __webpack_require__(2);\n\n      var format_1 = __webpack_require__(3);\n\n      var leaf_1 = __webpack_require__(4);\n\n      var scroll_1 = __webpack_require__(12);\n\n      var inline_1 = __webpack_require__(13);\n\n      var block_1 = __webpack_require__(14);\n\n      var embed_1 = __webpack_require__(15);\n\n      var text_1 = __webpack_require__(16);\n\n      var attributor_1 = __webpack_require__(1);\n\n      var class_1 = __webpack_require__(7);\n\n      var style_1 = __webpack_require__(8);\n\n      var store_1 = __webpack_require__(6);\n\n      var Registry = __webpack_require__(0);\n\n      var Parchment = {\n        Scope: Registry.Scope,\n        create: Registry.create,\n        find: Registry.find,\n        query: Registry.query,\n        register: Registry.register,\n        Container: container_1.default,\n        Format: format_1.default,\n        Leaf: leaf_1.default,\n        Embed: embed_1.default,\n        Scroll: scroll_1.default,\n        Block: block_1.default,\n        Inline: inline_1.default,\n        Text: text_1.default,\n        Attributor: {\n          Attribute: attributor_1.default,\n          Class: class_1.default,\n          Style: style_1.default,\n          Store: store_1.default\n        }\n      };\n      exports.default = Parchment;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var LinkedList =\n      /** @class */\n      function () {\n        function LinkedList() {\n          this.head = this.tail = null;\n          this.length = 0;\n        }\n\n        LinkedList.prototype.append = function () {\n          var nodes = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n          }\n\n          this.insertBefore(nodes[0], null);\n\n          if (nodes.length > 1) {\n            this.append.apply(this, nodes.slice(1));\n          }\n        };\n\n        LinkedList.prototype.contains = function (node) {\n          var cur,\n              next = this.iterator();\n\n          while (cur = next()) {\n            if (cur === node) return true;\n          }\n\n          return false;\n        };\n\n        LinkedList.prototype.insertBefore = function (node, refNode) {\n          if (!node) return;\n          node.next = refNode;\n\n          if (refNode != null) {\n            node.prev = refNode.prev;\n\n            if (refNode.prev != null) {\n              refNode.prev.next = node;\n            }\n\n            refNode.prev = node;\n\n            if (refNode === this.head) {\n              this.head = node;\n            }\n          } else if (this.tail != null) {\n            this.tail.next = node;\n            node.prev = this.tail;\n            this.tail = node;\n          } else {\n            node.prev = null;\n            this.head = this.tail = node;\n          }\n\n          this.length += 1;\n        };\n\n        LinkedList.prototype.offset = function (target) {\n          var index = 0,\n              cur = this.head;\n\n          while (cur != null) {\n            if (cur === target) return index;\n            index += cur.length();\n            cur = cur.next;\n          }\n\n          return -1;\n        };\n\n        LinkedList.prototype.remove = function (node) {\n          if (!this.contains(node)) return;\n          if (node.prev != null) node.prev.next = node.next;\n          if (node.next != null) node.next.prev = node.prev;\n          if (node === this.head) this.head = node.next;\n          if (node === this.tail) this.tail = node.prev;\n          this.length -= 1;\n        };\n\n        LinkedList.prototype.iterator = function (curNode) {\n          if (curNode === void 0) {\n            curNode = this.head;\n          } // TODO use yield when we can\n\n\n          return function () {\n            var ret = curNode;\n            if (curNode != null) curNode = curNode.next;\n            return ret;\n          };\n        };\n\n        LinkedList.prototype.find = function (index, inclusive) {\n          if (inclusive === void 0) {\n            inclusive = false;\n          }\n\n          var cur,\n              next = this.iterator();\n\n          while (cur = next()) {\n            var length_1 = cur.length();\n\n            if (index < length_1 || inclusive && index === length_1 && (cur.next == null || cur.next.length() !== 0)) {\n              return [cur, index];\n            }\n\n            index -= length_1;\n          }\n\n          return [null, 0];\n        };\n\n        LinkedList.prototype.forEach = function (callback) {\n          var cur,\n              next = this.iterator();\n\n          while (cur = next()) {\n            callback(cur);\n          }\n        };\n\n        LinkedList.prototype.forEachAt = function (index, length, callback) {\n          if (length <= 0) return;\n\n          var _a = this.find(index),\n              startNode = _a[0],\n              offset = _a[1];\n\n          var cur,\n              curIndex = index - offset,\n              next = this.iterator(startNode);\n\n          while ((cur = next()) && curIndex < index + length) {\n            var curLength = cur.length();\n\n            if (index > curIndex) {\n              callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));\n            } else {\n              callback(cur, 0, Math.min(curLength, index + length - curIndex));\n            }\n\n            curIndex += curLength;\n          }\n        };\n\n        LinkedList.prototype.map = function (callback) {\n          return this.reduce(function (memo, cur) {\n            memo.push(callback(cur));\n            return memo;\n          }, []);\n        };\n\n        LinkedList.prototype.reduce = function (callback, memo) {\n          var cur,\n              next = this.iterator();\n\n          while (cur = next()) {\n            memo = callback(memo, cur);\n          }\n\n          return memo;\n        };\n\n        return LinkedList;\n      }();\n\n      exports.default = LinkedList;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var container_1 = __webpack_require__(2);\n\n      var Registry = __webpack_require__(0);\n\n      var OBSERVER_CONFIG = {\n        attributes: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true\n      };\n      var MAX_OPTIMIZE_ITERATIONS = 100;\n\n      var ScrollBlot =\n      /** @class */\n      function (_super) {\n        __extends(ScrollBlot, _super);\n\n        function ScrollBlot(node) {\n          var _this = _super.call(this, node) || this;\n\n          _this.scroll = _this;\n          _this.observer = new MutationObserver(function (mutations) {\n            _this.update(mutations);\n          });\n\n          _this.observer.observe(_this.domNode, OBSERVER_CONFIG);\n\n          _this.attach();\n\n          return _this;\n        }\n\n        ScrollBlot.prototype.detach = function () {\n          _super.prototype.detach.call(this);\n\n          this.observer.disconnect();\n        };\n\n        ScrollBlot.prototype.deleteAt = function (index, length) {\n          this.update();\n\n          if (index === 0 && length === this.length()) {\n            this.children.forEach(function (child) {\n              child.remove();\n            });\n          } else {\n            _super.prototype.deleteAt.call(this, index, length);\n          }\n        };\n\n        ScrollBlot.prototype.formatAt = function (index, length, name, value) {\n          this.update();\n\n          _super.prototype.formatAt.call(this, index, length, name, value);\n        };\n\n        ScrollBlot.prototype.insertAt = function (index, value, def) {\n          this.update();\n\n          _super.prototype.insertAt.call(this, index, value, def);\n        };\n\n        ScrollBlot.prototype.optimize = function (mutations, context) {\n          var _this = this;\n\n          if (mutations === void 0) {\n            mutations = [];\n          }\n\n          if (context === void 0) {\n            context = {};\n          }\n\n          _super.prototype.optimize.call(this, context); // We must modify mutations directly, cannot make copy and then modify\n\n\n          var records = [].slice.call(this.observer.takeRecords()); // Array.push currently seems to be implemented by a non-tail recursive function\n          // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n\n          while (records.length > 0) mutations.push(records.pop()); // TODO use WeakMap\n\n\n          var mark = function (blot, markParent) {\n            if (markParent === void 0) {\n              markParent = true;\n            }\n\n            if (blot == null || blot === _this) return;\n            if (blot.domNode.parentNode == null) return; // @ts-ignore\n\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n              // @ts-ignore\n              blot.domNode[Registry.DATA_KEY].mutations = [];\n            }\n\n            if (markParent) mark(blot.parent);\n          };\n\n          var optimize = function (blot) {\n            // Post-order traversal\n            if ( // @ts-ignore\n            blot.domNode[Registry.DATA_KEY] == null || // @ts-ignore\n            blot.domNode[Registry.DATA_KEY].mutations == null) {\n              return;\n            }\n\n            if (blot instanceof container_1.default) {\n              blot.children.forEach(optimize);\n            }\n\n            blot.optimize(context);\n          };\n\n          var remaining = mutations;\n\n          for (var i = 0; remaining.length > 0; i += 1) {\n            if (i >= MAX_OPTIMIZE_ITERATIONS) {\n              throw new Error('[Parchment] Maximum optimize iterations reached');\n            }\n\n            remaining.forEach(function (mutation) {\n              var blot = Registry.find(mutation.target, true);\n              if (blot == null) return;\n\n              if (blot.domNode === mutation.target) {\n                if (mutation.type === 'childList') {\n                  mark(Registry.find(mutation.previousSibling, false));\n                  [].forEach.call(mutation.addedNodes, function (node) {\n                    var child = Registry.find(node, false);\n                    mark(child, false);\n\n                    if (child instanceof container_1.default) {\n                      child.children.forEach(function (grandChild) {\n                        mark(grandChild, false);\n                      });\n                    }\n                  });\n                } else if (mutation.type === 'attributes') {\n                  mark(blot.prev);\n                }\n              }\n\n              mark(blot);\n            });\n            this.children.forEach(optimize);\n            remaining = [].slice.call(this.observer.takeRecords());\n            records = remaining.slice();\n\n            while (records.length > 0) mutations.push(records.pop());\n          }\n        };\n\n        ScrollBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n\n          if (context === void 0) {\n            context = {};\n          }\n\n          mutations = mutations || this.observer.takeRecords(); // TODO use WeakMap\n\n          mutations.map(function (mutation) {\n            var blot = Registry.find(mutation.target, true);\n            if (blot == null) return null; // @ts-ignore\n\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n              // @ts-ignore\n              blot.domNode[Registry.DATA_KEY].mutations = [mutation];\n              return blot;\n            } else {\n              // @ts-ignore\n              blot.domNode[Registry.DATA_KEY].mutations.push(mutation);\n              return null;\n            }\n          }).forEach(function (blot) {\n            if (blot == null || blot === _this || //@ts-ignore\n            blot.domNode[Registry.DATA_KEY] == null) return; // @ts-ignore\n\n            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);\n          }); // @ts-ignore\n\n          if (this.domNode[Registry.DATA_KEY].mutations != null) {\n            // @ts-ignore\n            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);\n          }\n\n          this.optimize(mutations, context);\n        };\n\n        ScrollBlot.blotName = 'scroll';\n        ScrollBlot.defaultChild = 'block';\n        ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;\n        ScrollBlot.tagName = 'DIV';\n        return ScrollBlot;\n      }(container_1.default);\n\n      exports.default = ScrollBlot;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var format_1 = __webpack_require__(3);\n\n      var Registry = __webpack_require__(0); // Shallow object comparison\n\n\n      function isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) return false; // @ts-ignore\n\n        for (var prop in obj1) {\n          // @ts-ignore\n          if (obj1[prop] !== obj2[prop]) return false;\n        }\n\n        return true;\n      }\n\n      var InlineBlot =\n      /** @class */\n      function (_super) {\n        __extends(InlineBlot, _super);\n\n        function InlineBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        InlineBlot.formats = function (domNode) {\n          if (domNode.tagName === InlineBlot.tagName) return undefined;\n          return _super.formats.call(this, domNode);\n        };\n\n        InlineBlot.prototype.format = function (name, value) {\n          var _this = this;\n\n          if (name === this.statics.blotName && !value) {\n            this.children.forEach(function (child) {\n              if (!(child instanceof format_1.default)) {\n                child = child.wrap(InlineBlot.blotName, true);\n              }\n\n              _this.attributes.copy(child);\n            });\n            this.unwrap();\n          } else {\n            _super.prototype.format.call(this, name, value);\n          }\n        };\n\n        InlineBlot.prototype.formatAt = function (index, length, name, value) {\n          if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {\n            var blot = this.isolate(index, length);\n            blot.format(name, value);\n          } else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n          }\n        };\n\n        InlineBlot.prototype.optimize = function (context) {\n          _super.prototype.optimize.call(this, context);\n\n          var formats = this.formats();\n\n          if (Object.keys(formats).length === 0) {\n            return this.unwrap(); // unformatted span\n          }\n\n          var next = this.next;\n\n          if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {\n            next.moveChildren(this);\n            next.remove();\n          }\n        };\n\n        InlineBlot.blotName = 'inline';\n        InlineBlot.scope = Registry.Scope.INLINE_BLOT;\n        InlineBlot.tagName = 'SPAN';\n        return InlineBlot;\n      }(format_1.default);\n\n      exports.default = InlineBlot;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var format_1 = __webpack_require__(3);\n\n      var Registry = __webpack_require__(0);\n\n      var BlockBlot =\n      /** @class */\n      function (_super) {\n        __extends(BlockBlot, _super);\n\n        function BlockBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        BlockBlot.formats = function (domNode) {\n          var tagName = Registry.query(BlockBlot.blotName).tagName;\n          if (domNode.tagName === tagName) return undefined;\n          return _super.formats.call(this, domNode);\n        };\n\n        BlockBlot.prototype.format = function (name, value) {\n          if (Registry.query(name, Registry.Scope.BLOCK) == null) {\n            return;\n          } else if (name === this.statics.blotName && !value) {\n            this.replaceWith(BlockBlot.blotName);\n          } else {\n            _super.prototype.format.call(this, name, value);\n          }\n        };\n\n        BlockBlot.prototype.formatAt = function (index, length, name, value) {\n          if (Registry.query(name, Registry.Scope.BLOCK) != null) {\n            this.format(name, value);\n          } else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n          }\n        };\n\n        BlockBlot.prototype.insertAt = function (index, value, def) {\n          if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {\n            // Insert text or inline\n            _super.prototype.insertAt.call(this, index, value, def);\n          } else {\n            var after = this.split(index);\n            var blot = Registry.create(value, def);\n            after.parent.insertBefore(blot, after);\n          }\n        };\n\n        BlockBlot.prototype.update = function (mutations, context) {\n          if (navigator.userAgent.match(/Trident/)) {\n            this.build();\n          } else {\n            _super.prototype.update.call(this, mutations, context);\n          }\n        };\n\n        BlockBlot.blotName = 'block';\n        BlockBlot.scope = Registry.Scope.BLOCK_BLOT;\n        BlockBlot.tagName = 'P';\n        return BlockBlot;\n      }(format_1.default);\n\n      exports.default = BlockBlot;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var leaf_1 = __webpack_require__(4);\n\n      var EmbedBlot =\n      /** @class */\n      function (_super) {\n        __extends(EmbedBlot, _super);\n\n        function EmbedBlot() {\n          return _super !== null && _super.apply(this, arguments) || this;\n        }\n\n        EmbedBlot.formats = function (domNode) {\n          return undefined;\n        };\n\n        EmbedBlot.prototype.format = function (name, value) {\n          // super.formatAt wraps, which is what we want in general,\n          // but this allows subclasses to overwrite for formats\n          // that just apply to particular embeds\n          _super.prototype.formatAt.call(this, 0, this.length(), name, value);\n        };\n\n        EmbedBlot.prototype.formatAt = function (index, length, name, value) {\n          if (index === 0 && length === this.length()) {\n            this.format(name, value);\n          } else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n          }\n        };\n\n        EmbedBlot.prototype.formats = function () {\n          return this.statics.formats(this.domNode);\n        };\n\n        return EmbedBlot;\n      }(leaf_1.default);\n\n      exports.default = EmbedBlot;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      \"use strict\";\n\n      var __extends = this && this.__extends || function () {\n        var extendStatics = Object.setPrototypeOf || {\n          __proto__: []\n        } instanceof Array && function (d, b) {\n          d.__proto__ = b;\n        } || function (d, b) {\n          for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        };\n\n        return function (d, b) {\n          extendStatics(d, b);\n\n          function __() {\n            this.constructor = d;\n          }\n\n          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n      }();\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n\n      var leaf_1 = __webpack_require__(4);\n\n      var Registry = __webpack_require__(0);\n\n      var TextBlot =\n      /** @class */\n      function (_super) {\n        __extends(TextBlot, _super);\n\n        function TextBlot(node) {\n          var _this = _super.call(this, node) || this;\n\n          _this.text = _this.statics.value(_this.domNode);\n          return _this;\n        }\n\n        TextBlot.create = function (value) {\n          return document.createTextNode(value);\n        };\n\n        TextBlot.value = function (domNode) {\n          var text = domNode.data; // @ts-ignore\n\n          if (text['normalize']) text = text['normalize']();\n          return text;\n        };\n\n        TextBlot.prototype.deleteAt = function (index, length) {\n          this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);\n        };\n\n        TextBlot.prototype.index = function (node, offset) {\n          if (this.domNode === node) {\n            return offset;\n          }\n\n          return -1;\n        };\n\n        TextBlot.prototype.insertAt = function (index, value, def) {\n          if (def == null) {\n            this.text = this.text.slice(0, index) + value + this.text.slice(index);\n            this.domNode.data = this.text;\n          } else {\n            _super.prototype.insertAt.call(this, index, value, def);\n          }\n        };\n\n        TextBlot.prototype.length = function () {\n          return this.text.length;\n        };\n\n        TextBlot.prototype.optimize = function (context) {\n          _super.prototype.optimize.call(this, context);\n\n          this.text = this.statics.value(this.domNode);\n\n          if (this.text.length === 0) {\n            this.remove();\n          } else if (this.next instanceof TextBlot && this.next.prev === this) {\n            this.insertAt(this.length(), this.next.value());\n            this.next.remove();\n          }\n        };\n\n        TextBlot.prototype.position = function (index, inclusive) {\n          if (inclusive === void 0) {\n            inclusive = false;\n          }\n\n          return [this.domNode, index];\n        };\n\n        TextBlot.prototype.split = function (index, force) {\n          if (force === void 0) {\n            force = false;\n          }\n\n          if (!force) {\n            if (index === 0) return this;\n            if (index === this.length()) return this.next;\n          }\n\n          var after = Registry.create(this.domNode.splitText(index));\n          this.parent.insertBefore(after, this.next);\n          this.text = this.statics.value(this.domNode);\n          return after;\n        };\n\n        TextBlot.prototype.update = function (mutations, context) {\n          var _this = this;\n\n          if (mutations.some(function (mutation) {\n            return mutation.type === 'characterData' && mutation.target === _this.domNode;\n          })) {\n            this.text = this.statics.value(this.domNode);\n          }\n        };\n\n        TextBlot.prototype.value = function () {\n          return this.text;\n        };\n\n        TextBlot.blotName = 'text';\n        TextBlot.scope = Registry.Scope.INLINE_BLOT;\n        return TextBlot;\n      }(leaf_1.default);\n\n      exports.default = TextBlot;\n      /***/\n    }\n    /******/\n    ])\n  );\n});","map":{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:/webpack/bootstrap 3c334e19bc1efdeb80ab","webpack:///src/registry.ts","webpack:///src/attributor/attributor.ts","webpack:///src/blot/abstract/container.ts","webpack:///src/blot/abstract/format.ts","webpack:///src/blot/abstract/leaf.ts","webpack:///src/blot/abstract/shadow.ts","webpack:///src/attributor/store.ts","webpack:///src/attributor/class.ts","webpack:///src/attributor/style.ts","webpack:///src/parchment.ts","webpack:///src/collection/linked-list.ts","webpack:///src/blot/scroll.ts","webpack:///src/blot/inline.ts","webpack:///src/blot/block.ts","webpack:///src/blot/embed.ts","webpack:///src/blot/text.ts"],"names":[],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Parchment\"] = factory();\n\telse\n\t\troot[\"Parchment\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3c334e19bc1efdeb80ab","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ParchmentError = /** @class */ (function (_super) {\n    __extends(ParchmentError, _super);\n    function ParchmentError(message) {\n        var _this = this;\n        message = '[Parchment] ' + message;\n        _this = _super.call(this, message) || this;\n        _this.message = message;\n        _this.name = _this.constructor.name;\n        return _this;\n    }\n    return ParchmentError;\n}(Error));\nexports.ParchmentError = ParchmentError;\nvar attributes = {};\nvar classes = {};\nvar tags = {};\nvar types = {};\nexports.DATA_KEY = '__blot';\nvar Scope;\n(function (Scope) {\n    Scope[Scope[\"TYPE\"] = 3] = \"TYPE\";\n    Scope[Scope[\"LEVEL\"] = 12] = \"LEVEL\";\n    Scope[Scope[\"ATTRIBUTE\"] = 13] = \"ATTRIBUTE\";\n    Scope[Scope[\"BLOT\"] = 14] = \"BLOT\";\n    Scope[Scope[\"INLINE\"] = 7] = \"INLINE\";\n    Scope[Scope[\"BLOCK\"] = 11] = \"BLOCK\";\n    Scope[Scope[\"BLOCK_BLOT\"] = 10] = \"BLOCK_BLOT\";\n    Scope[Scope[\"INLINE_BLOT\"] = 6] = \"INLINE_BLOT\";\n    Scope[Scope[\"BLOCK_ATTRIBUTE\"] = 9] = \"BLOCK_ATTRIBUTE\";\n    Scope[Scope[\"INLINE_ATTRIBUTE\"] = 5] = \"INLINE_ATTRIBUTE\";\n    Scope[Scope[\"ANY\"] = 15] = \"ANY\";\n})(Scope = exports.Scope || (exports.Scope = {}));\nfunction create(input, value) {\n    var match = query(input);\n    if (match == null) {\n        throw new ParchmentError(\"Unable to create \" + input + \" blot\");\n    }\n    var BlotClass = match;\n    var node = \n    // @ts-ignore\n    input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);\n    return new BlotClass(node, value);\n}\nexports.create = create;\nfunction find(node, bubble) {\n    if (bubble === void 0) { bubble = false; }\n    if (node == null)\n        return null;\n    // @ts-ignore\n    if (node[exports.DATA_KEY] != null)\n        return node[exports.DATA_KEY].blot;\n    if (bubble)\n        return find(node.parentNode, bubble);\n    return null;\n}\nexports.find = find;\nfunction query(query, scope) {\n    if (scope === void 0) { scope = Scope.ANY; }\n    var match;\n    if (typeof query === 'string') {\n        match = types[query] || attributes[query];\n        // @ts-ignore\n    }\n    else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {\n        match = types['text'];\n    }\n    else if (typeof query === 'number') {\n        if (query & Scope.LEVEL & Scope.BLOCK) {\n            match = types['block'];\n        }\n        else if (query & Scope.LEVEL & Scope.INLINE) {\n            match = types['inline'];\n        }\n    }\n    else if (query instanceof HTMLElement) {\n        var names = (query.getAttribute('class') || '').split(/\\s+/);\n        for (var i in names) {\n            match = classes[names[i]];\n            if (match)\n                break;\n        }\n        match = match || tags[query.tagName];\n    }\n    if (match == null)\n        return null;\n    // @ts-ignore\n    if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope)\n        return match;\n    return null;\n}\nexports.query = query;\nfunction register() {\n    var Definitions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        Definitions[_i] = arguments[_i];\n    }\n    if (Definitions.length > 1) {\n        return Definitions.map(function (d) {\n            return register(d);\n        });\n    }\n    var Definition = Definitions[0];\n    if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {\n        throw new ParchmentError('Invalid definition');\n    }\n    else if (Definition.blotName === 'abstract') {\n        throw new ParchmentError('Cannot register abstract class');\n    }\n    types[Definition.blotName || Definition.attrName] = Definition;\n    if (typeof Definition.keyName === 'string') {\n        attributes[Definition.keyName] = Definition;\n    }\n    else {\n        if (Definition.className != null) {\n            classes[Definition.className] = Definition;\n        }\n        if (Definition.tagName != null) {\n            if (Array.isArray(Definition.tagName)) {\n                Definition.tagName = Definition.tagName.map(function (tagName) {\n                    return tagName.toUpperCase();\n                });\n            }\n            else {\n                Definition.tagName = Definition.tagName.toUpperCase();\n            }\n            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];\n            tagNames.forEach(function (tag) {\n                if (tags[tag] == null || Definition.className == null) {\n                    tags[tag] = Definition;\n                }\n            });\n        }\n    }\n    return Definition;\n}\nexports.register = register;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/registry.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Registry = require(\"../registry\");\nvar Attributor = /** @class */ (function () {\n    function Attributor(attrName, keyName, options) {\n        if (options === void 0) { options = {}; }\n        this.attrName = attrName;\n        this.keyName = keyName;\n        var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;\n        if (options.scope != null) {\n            // Ignore type bits, force attribute bit\n            this.scope = (options.scope & Registry.Scope.LEVEL) | attributeBit;\n        }\n        else {\n            this.scope = Registry.Scope.ATTRIBUTE;\n        }\n        if (options.whitelist != null)\n            this.whitelist = options.whitelist;\n    }\n    Attributor.keys = function (node) {\n        return [].map.call(node.attributes, function (item) {\n            return item.name;\n        });\n    };\n    Attributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        node.setAttribute(this.keyName, value);\n        return true;\n    };\n    Attributor.prototype.canAdd = function (node, value) {\n        var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));\n        if (match == null)\n            return false;\n        if (this.whitelist == null)\n            return true;\n        if (typeof value === 'string') {\n            return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n        }\n        else {\n            return this.whitelist.indexOf(value) > -1;\n        }\n    };\n    Attributor.prototype.remove = function (node) {\n        node.removeAttribute(this.keyName);\n    };\n    Attributor.prototype.value = function (node) {\n        var value = node.getAttribute(this.keyName);\n        if (this.canAdd(node, value) && value) {\n            return value;\n        }\n        return '';\n    };\n    return Attributor;\n}());\nexports.default = Attributor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/attributor.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar linked_list_1 = require(\"../../collection/linked-list\");\nvar shadow_1 = require(\"./shadow\");\nvar Registry = require(\"../../registry\");\nvar ContainerBlot = /** @class */ (function (_super) {\n    __extends(ContainerBlot, _super);\n    function ContainerBlot(domNode) {\n        var _this = _super.call(this, domNode) || this;\n        _this.build();\n        return _this;\n    }\n    ContainerBlot.prototype.appendChild = function (other) {\n        this.insertBefore(other);\n    };\n    ContainerBlot.prototype.attach = function () {\n        _super.prototype.attach.call(this);\n        this.children.forEach(function (child) {\n            child.attach();\n        });\n    };\n    ContainerBlot.prototype.build = function () {\n        var _this = this;\n        this.children = new linked_list_1.default();\n        // Need to be reversed for if DOM nodes already in order\n        [].slice\n            .call(this.domNode.childNodes)\n            .reverse()\n            .forEach(function (node) {\n            try {\n                var child = makeBlot(node);\n                _this.insertBefore(child, _this.children.head || undefined);\n            }\n            catch (err) {\n                if (err instanceof Registry.ParchmentError)\n                    return;\n                else\n                    throw err;\n            }\n        });\n    };\n    ContainerBlot.prototype.deleteAt = function (index, length) {\n        if (index === 0 && length === this.length()) {\n            return this.remove();\n        }\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.deleteAt(offset, length);\n        });\n    };\n    ContainerBlot.prototype.descendant = function (criteria, index) {\n        var _a = this.children.find(index), child = _a[0], offset = _a[1];\n        if ((criteria.blotName == null && criteria(child)) ||\n            (criteria.blotName != null && child instanceof criteria)) {\n            return [child, offset];\n        }\n        else if (child instanceof ContainerBlot) {\n            return child.descendant(criteria, offset);\n        }\n        else {\n            return [null, -1];\n        }\n    };\n    ContainerBlot.prototype.descendants = function (criteria, index, length) {\n        if (index === void 0) { index = 0; }\n        if (length === void 0) { length = Number.MAX_VALUE; }\n        var descendants = [];\n        var lengthLeft = length;\n        this.children.forEachAt(index, length, function (child, index, length) {\n            if ((criteria.blotName == null && criteria(child)) ||\n                (criteria.blotName != null && child instanceof criteria)) {\n                descendants.push(child);\n            }\n            if (child instanceof ContainerBlot) {\n                descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));\n            }\n            lengthLeft -= length;\n        });\n        return descendants;\n    };\n    ContainerBlot.prototype.detach = function () {\n        this.children.forEach(function (child) {\n            child.detach();\n        });\n        _super.prototype.detach.call(this);\n    };\n    ContainerBlot.prototype.formatAt = function (index, length, name, value) {\n        this.children.forEachAt(index, length, function (child, offset, length) {\n            child.formatAt(offset, length, name, value);\n        });\n    };\n    ContainerBlot.prototype.insertAt = function (index, value, def) {\n        var _a = this.children.find(index), child = _a[0], offset = _a[1];\n        if (child) {\n            child.insertAt(offset, value, def);\n        }\n        else {\n            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n            this.appendChild(blot);\n        }\n    };\n    ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {\n        if (this.statics.allowedChildren != null &&\n            !this.statics.allowedChildren.some(function (child) {\n                return childBlot instanceof child;\n            })) {\n            throw new Registry.ParchmentError(\"Cannot insert \" + childBlot.statics.blotName + \" into \" + this.statics.blotName);\n        }\n        childBlot.insertInto(this, refBlot);\n    };\n    ContainerBlot.prototype.length = function () {\n        return this.children.reduce(function (memo, child) {\n            return memo + child.length();\n        }, 0);\n    };\n    ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {\n        this.children.forEach(function (child) {\n            targetParent.insertBefore(child, refNode);\n        });\n    };\n    ContainerBlot.prototype.optimize = function (context) {\n        _super.prototype.optimize.call(this, context);\n        if (this.children.length === 0) {\n            if (this.statics.defaultChild != null) {\n                var child = Registry.create(this.statics.defaultChild);\n                this.appendChild(child);\n                child.optimize(context);\n            }\n            else {\n                this.remove();\n            }\n        }\n    };\n    ContainerBlot.prototype.path = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        var _a = this.children.find(index, inclusive), child = _a[0], offset = _a[1];\n        var position = [[this, index]];\n        if (child instanceof ContainerBlot) {\n            return position.concat(child.path(offset, inclusive));\n        }\n        else if (child != null) {\n            position.push([child, offset]);\n        }\n        return position;\n    };\n    ContainerBlot.prototype.removeChild = function (child) {\n        this.children.remove(child);\n    };\n    ContainerBlot.prototype.replace = function (target) {\n        if (target instanceof ContainerBlot) {\n            target.moveChildren(this);\n        }\n        _super.prototype.replace.call(this, target);\n    };\n    ContainerBlot.prototype.split = function (index, force) {\n        if (force === void 0) { force = false; }\n        if (!force) {\n            if (index === 0)\n                return this;\n            if (index === this.length())\n                return this.next;\n        }\n        var after = this.clone();\n        this.parent.insertBefore(after, this.next);\n        this.children.forEachAt(index, this.length(), function (child, offset, length) {\n            child = child.split(offset, force);\n            after.appendChild(child);\n        });\n        return after;\n    };\n    ContainerBlot.prototype.unwrap = function () {\n        this.moveChildren(this.parent, this.next);\n        this.remove();\n    };\n    ContainerBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        var addedNodes = [];\n        var removedNodes = [];\n        mutations.forEach(function (mutation) {\n            if (mutation.target === _this.domNode && mutation.type === 'childList') {\n                addedNodes.push.apply(addedNodes, mutation.addedNodes);\n                removedNodes.push.apply(removedNodes, mutation.removedNodes);\n            }\n        });\n        removedNodes.forEach(function (node) {\n            // Check node has actually been removed\n            // One exception is Chrome does not immediately remove IFRAMEs\n            // from DOM but MutationRecord is correct in its reported removal\n            if (node.parentNode != null &&\n                // @ts-ignore\n                node.tagName !== 'IFRAME' &&\n                document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                return;\n            }\n            var blot = Registry.find(node);\n            if (blot == null)\n                return;\n            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {\n                blot.detach();\n            }\n        });\n        addedNodes\n            .filter(function (node) {\n            return node.parentNode == _this.domNode;\n        })\n            .sort(function (a, b) {\n            if (a === b)\n                return 0;\n            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n                return 1;\n            }\n            return -1;\n        })\n            .forEach(function (node) {\n            var refBlot = null;\n            if (node.nextSibling != null) {\n                refBlot = Registry.find(node.nextSibling);\n            }\n            var blot = makeBlot(node);\n            if (blot.next != refBlot || blot.next == null) {\n                if (blot.parent != null) {\n                    blot.parent.removeChild(_this);\n                }\n                _this.insertBefore(blot, refBlot || undefined);\n            }\n        });\n    };\n    return ContainerBlot;\n}(shadow_1.default));\nfunction makeBlot(node) {\n    var blot = Registry.find(node);\n    if (blot == null) {\n        try {\n            blot = Registry.create(node);\n        }\n        catch (e) {\n            blot = Registry.create(Registry.Scope.INLINE);\n            [].slice.call(node.childNodes).forEach(function (child) {\n                // @ts-ignore\n                blot.domNode.appendChild(child);\n            });\n            if (node.parentNode) {\n                node.parentNode.replaceChild(blot.domNode, node);\n            }\n            blot.attach();\n        }\n    }\n    return blot;\n}\nexports.default = ContainerBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/container.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"../../attributor/attributor\");\nvar store_1 = require(\"../../attributor/store\");\nvar container_1 = require(\"./container\");\nvar Registry = require(\"../../registry\");\nvar FormatBlot = /** @class */ (function (_super) {\n    __extends(FormatBlot, _super);\n    function FormatBlot(domNode) {\n        var _this = _super.call(this, domNode) || this;\n        _this.attributes = new store_1.default(_this.domNode);\n        return _this;\n    }\n    FormatBlot.formats = function (domNode) {\n        if (typeof this.tagName === 'string') {\n            return true;\n        }\n        else if (Array.isArray(this.tagName)) {\n            return domNode.tagName.toLowerCase();\n        }\n        return undefined;\n    };\n    FormatBlot.prototype.format = function (name, value) {\n        var format = Registry.query(name);\n        if (format instanceof attributor_1.default) {\n            this.attributes.attribute(format, value);\n        }\n        else if (value) {\n            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {\n                this.replaceWith(name, value);\n            }\n        }\n    };\n    FormatBlot.prototype.formats = function () {\n        var formats = this.attributes.values();\n        var format = this.statics.formats(this.domNode);\n        if (format != null) {\n            formats[this.statics.blotName] = format;\n        }\n        return formats;\n    };\n    FormatBlot.prototype.replaceWith = function (name, value) {\n        var replacement = _super.prototype.replaceWith.call(this, name, value);\n        this.attributes.copy(replacement);\n        return replacement;\n    };\n    FormatBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        _super.prototype.update.call(this, mutations, context);\n        if (mutations.some(function (mutation) {\n            return mutation.target === _this.domNode && mutation.type === 'attributes';\n        })) {\n            this.attributes.build();\n        }\n    };\n    FormatBlot.prototype.wrap = function (name, value) {\n        var wrapper = _super.prototype.wrap.call(this, name, value);\n        if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {\n            this.attributes.move(wrapper);\n        }\n        return wrapper;\n    };\n    return FormatBlot;\n}(container_1.default));\nexports.default = FormatBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/format.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar shadow_1 = require(\"./shadow\");\nvar Registry = require(\"../../registry\");\nvar LeafBlot = /** @class */ (function (_super) {\n    __extends(LeafBlot, _super);\n    function LeafBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    LeafBlot.value = function (domNode) {\n        return true;\n    };\n    LeafBlot.prototype.index = function (node, offset) {\n        if (this.domNode === node ||\n            this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            return Math.min(offset, 1);\n        }\n        return -1;\n    };\n    LeafBlot.prototype.position = function (index, inclusive) {\n        var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);\n        if (index > 0)\n            offset += 1;\n        return [this.parent.domNode, offset];\n    };\n    LeafBlot.prototype.value = function () {\n        return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;\n        var _a;\n    };\n    LeafBlot.scope = Registry.Scope.INLINE_BLOT;\n    return LeafBlot;\n}(shadow_1.default));\nexports.default = LeafBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/leaf.ts\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Registry = require(\"../../registry\");\nvar ShadowBlot = /** @class */ (function () {\n    function ShadowBlot(domNode) {\n        this.domNode = domNode;\n        // @ts-ignore\n        this.domNode[Registry.DATA_KEY] = { blot: this };\n    }\n    Object.defineProperty(ShadowBlot.prototype, \"statics\", {\n        // Hack for accessing inherited static methods\n        get: function () {\n            return this.constructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ShadowBlot.create = function (value) {\n        if (this.tagName == null) {\n            throw new Registry.ParchmentError('Blot definition missing tagName');\n        }\n        var node;\n        if (Array.isArray(this.tagName)) {\n            if (typeof value === 'string') {\n                value = value.toUpperCase();\n                if (parseInt(value).toString() === value) {\n                    value = parseInt(value);\n                }\n            }\n            if (typeof value === 'number') {\n                node = document.createElement(this.tagName[value - 1]);\n            }\n            else if (this.tagName.indexOf(value) > -1) {\n                node = document.createElement(value);\n            }\n            else {\n                node = document.createElement(this.tagName[0]);\n            }\n        }\n        else {\n            node = document.createElement(this.tagName);\n        }\n        if (this.className) {\n            node.classList.add(this.className);\n        }\n        return node;\n    };\n    ShadowBlot.prototype.attach = function () {\n        if (this.parent != null) {\n            this.scroll = this.parent.scroll;\n        }\n    };\n    ShadowBlot.prototype.clone = function () {\n        var domNode = this.domNode.cloneNode(false);\n        return Registry.create(domNode);\n    };\n    ShadowBlot.prototype.detach = function () {\n        if (this.parent != null)\n            this.parent.removeChild(this);\n        // @ts-ignore\n        delete this.domNode[Registry.DATA_KEY];\n    };\n    ShadowBlot.prototype.deleteAt = function (index, length) {\n        var blot = this.isolate(index, length);\n        blot.remove();\n    };\n    ShadowBlot.prototype.formatAt = function (index, length, name, value) {\n        var blot = this.isolate(index, length);\n        if (Registry.query(name, Registry.Scope.BLOT) != null && value) {\n            blot.wrap(name, value);\n        }\n        else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {\n            var parent_1 = Registry.create(this.statics.scope);\n            blot.wrap(parent_1);\n            parent_1.format(name, value);\n        }\n    };\n    ShadowBlot.prototype.insertAt = function (index, value, def) {\n        var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);\n        var ref = this.split(index);\n        this.parent.insertBefore(blot, ref);\n    };\n    ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {\n        if (refBlot === void 0) { refBlot = null; }\n        if (this.parent != null) {\n            this.parent.children.remove(this);\n        }\n        var refDomNode = null;\n        parentBlot.children.insertBefore(this, refBlot);\n        if (refBlot != null) {\n            refDomNode = refBlot.domNode;\n        }\n        if (this.domNode.parentNode != parentBlot.domNode ||\n            this.domNode.nextSibling != refDomNode) {\n            parentBlot.domNode.insertBefore(this.domNode, refDomNode);\n        }\n        this.parent = parentBlot;\n        this.attach();\n    };\n    ShadowBlot.prototype.isolate = function (index, length) {\n        var target = this.split(index);\n        target.split(length);\n        return target;\n    };\n    ShadowBlot.prototype.length = function () {\n        return 1;\n    };\n    ShadowBlot.prototype.offset = function (root) {\n        if (root === void 0) { root = this.parent; }\n        if (this.parent == null || this == root)\n            return 0;\n        return this.parent.children.offset(this) + this.parent.offset(root);\n    };\n    ShadowBlot.prototype.optimize = function (context) {\n        // TODO clean up once we use WeakMap\n        // @ts-ignore\n        if (this.domNode[Registry.DATA_KEY] != null) {\n            // @ts-ignore\n            delete this.domNode[Registry.DATA_KEY].mutations;\n        }\n    };\n    ShadowBlot.prototype.remove = function () {\n        if (this.domNode.parentNode != null) {\n            this.domNode.parentNode.removeChild(this.domNode);\n        }\n        this.detach();\n    };\n    ShadowBlot.prototype.replace = function (target) {\n        if (target.parent == null)\n            return;\n        target.parent.insertBefore(this, target.next);\n        target.remove();\n    };\n    ShadowBlot.prototype.replaceWith = function (name, value) {\n        var replacement = typeof name === 'string' ? Registry.create(name, value) : name;\n        replacement.replace(this);\n        return replacement;\n    };\n    ShadowBlot.prototype.split = function (index, force) {\n        return index === 0 ? this : this.next;\n    };\n    ShadowBlot.prototype.update = function (mutations, context) {\n        // Nothing to do by default\n    };\n    ShadowBlot.prototype.wrap = function (name, value) {\n        var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;\n        if (this.parent != null) {\n            this.parent.insertBefore(wrapper, this.next);\n        }\n        wrapper.appendChild(this);\n        return wrapper;\n    };\n    ShadowBlot.blotName = 'abstract';\n    return ShadowBlot;\n}());\nexports.default = ShadowBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/abstract/shadow.ts\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"./attributor\");\nvar class_1 = require(\"./class\");\nvar style_1 = require(\"./style\");\nvar Registry = require(\"../registry\");\nvar AttributorStore = /** @class */ (function () {\n    function AttributorStore(domNode) {\n        this.attributes = {};\n        this.domNode = domNode;\n        this.build();\n    }\n    AttributorStore.prototype.attribute = function (attribute, value) {\n        // verb\n        if (value) {\n            if (attribute.add(this.domNode, value)) {\n                if (attribute.value(this.domNode) != null) {\n                    this.attributes[attribute.attrName] = attribute;\n                }\n                else {\n                    delete this.attributes[attribute.attrName];\n                }\n            }\n        }\n        else {\n            attribute.remove(this.domNode);\n            delete this.attributes[attribute.attrName];\n        }\n    };\n    AttributorStore.prototype.build = function () {\n        var _this = this;\n        this.attributes = {};\n        var attributes = attributor_1.default.keys(this.domNode);\n        var classes = class_1.default.keys(this.domNode);\n        var styles = style_1.default.keys(this.domNode);\n        attributes\n            .concat(classes)\n            .concat(styles)\n            .forEach(function (name) {\n            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);\n            if (attr instanceof attributor_1.default) {\n                _this.attributes[attr.attrName] = attr;\n            }\n        });\n    };\n    AttributorStore.prototype.copy = function (target) {\n        var _this = this;\n        Object.keys(this.attributes).forEach(function (key) {\n            var value = _this.attributes[key].value(_this.domNode);\n            target.format(key, value);\n        });\n    };\n    AttributorStore.prototype.move = function (target) {\n        var _this = this;\n        this.copy(target);\n        Object.keys(this.attributes).forEach(function (key) {\n            _this.attributes[key].remove(_this.domNode);\n        });\n        this.attributes = {};\n    };\n    AttributorStore.prototype.values = function () {\n        var _this = this;\n        return Object.keys(this.attributes).reduce(function (attributes, name) {\n            attributes[name] = _this.attributes[name].value(_this.domNode);\n            return attributes;\n        }, {});\n    };\n    return AttributorStore;\n}());\nexports.default = AttributorStore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/store.ts\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"./attributor\");\nfunction match(node, prefix) {\n    var className = node.getAttribute('class') || '';\n    return className.split(/\\s+/).filter(function (name) {\n        return name.indexOf(prefix + \"-\") === 0;\n    });\n}\nvar ClassAttributor = /** @class */ (function (_super) {\n    __extends(ClassAttributor, _super);\n    function ClassAttributor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ClassAttributor.keys = function (node) {\n        return (node.getAttribute('class') || '').split(/\\s+/).map(function (name) {\n            return name\n                .split('-')\n                .slice(0, -1)\n                .join('-');\n        });\n    };\n    ClassAttributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        this.remove(node);\n        node.classList.add(this.keyName + \"-\" + value);\n        return true;\n    };\n    ClassAttributor.prototype.remove = function (node) {\n        var matches = match(node, this.keyName);\n        matches.forEach(function (name) {\n            node.classList.remove(name);\n        });\n        if (node.classList.length === 0) {\n            node.removeAttribute('class');\n        }\n    };\n    ClassAttributor.prototype.value = function (node) {\n        var result = match(node, this.keyName)[0] || '';\n        var value = result.slice(this.keyName.length + 1); // +1 for hyphen\n        return this.canAdd(node, value) ? value : '';\n    };\n    return ClassAttributor;\n}(attributor_1.default));\nexports.default = ClassAttributor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/class.ts\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar attributor_1 = require(\"./attributor\");\nfunction camelize(name) {\n    var parts = name.split('-');\n    var rest = parts\n        .slice(1)\n        .map(function (part) {\n        return part[0].toUpperCase() + part.slice(1);\n    })\n        .join('');\n    return parts[0] + rest;\n}\nvar StyleAttributor = /** @class */ (function (_super) {\n    __extends(StyleAttributor, _super);\n    function StyleAttributor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StyleAttributor.keys = function (node) {\n        return (node.getAttribute('style') || '').split(';').map(function (value) {\n            var arr = value.split(':');\n            return arr[0].trim();\n        });\n    };\n    StyleAttributor.prototype.add = function (node, value) {\n        if (!this.canAdd(node, value))\n            return false;\n        // @ts-ignore\n        node.style[camelize(this.keyName)] = value;\n        return true;\n    };\n    StyleAttributor.prototype.remove = function (node) {\n        // @ts-ignore\n        node.style[camelize(this.keyName)] = '';\n        if (!node.getAttribute('style')) {\n            node.removeAttribute('style');\n        }\n    };\n    StyleAttributor.prototype.value = function (node) {\n        // @ts-ignore\n        var value = node.style[camelize(this.keyName)];\n        return this.canAdd(node, value) ? value : '';\n    };\n    return StyleAttributor;\n}(attributor_1.default));\nexports.default = StyleAttributor;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/attributor/style.ts\n// module id = 8\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar container_1 = require(\"./blot/abstract/container\");\nvar format_1 = require(\"./blot/abstract/format\");\nvar leaf_1 = require(\"./blot/abstract/leaf\");\nvar scroll_1 = require(\"./blot/scroll\");\nvar inline_1 = require(\"./blot/inline\");\nvar block_1 = require(\"./blot/block\");\nvar embed_1 = require(\"./blot/embed\");\nvar text_1 = require(\"./blot/text\");\nvar attributor_1 = require(\"./attributor/attributor\");\nvar class_1 = require(\"./attributor/class\");\nvar style_1 = require(\"./attributor/style\");\nvar store_1 = require(\"./attributor/store\");\nvar Registry = require(\"./registry\");\nvar Parchment = {\n    Scope: Registry.Scope,\n    create: Registry.create,\n    find: Registry.find,\n    query: Registry.query,\n    register: Registry.register,\n    Container: container_1.default,\n    Format: format_1.default,\n    Leaf: leaf_1.default,\n    Embed: embed_1.default,\n    Scroll: scroll_1.default,\n    Block: block_1.default,\n    Inline: inline_1.default,\n    Text: text_1.default,\n    Attributor: {\n        Attribute: attributor_1.default,\n        Class: class_1.default,\n        Style: style_1.default,\n        Store: store_1.default,\n    },\n};\nexports.default = Parchment;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/parchment.ts\n// module id = 10\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LinkedList = /** @class */ (function () {\n    function LinkedList() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n    LinkedList.prototype.append = function () {\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        this.insertBefore(nodes[0], null);\n        if (nodes.length > 1) {\n            this.append.apply(this, nodes.slice(1));\n        }\n    };\n    LinkedList.prototype.contains = function (node) {\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            if (cur === node)\n                return true;\n        }\n        return false;\n    };\n    LinkedList.prototype.insertBefore = function (node, refNode) {\n        if (!node)\n            return;\n        node.next = refNode;\n        if (refNode != null) {\n            node.prev = refNode.prev;\n            if (refNode.prev != null) {\n                refNode.prev.next = node;\n            }\n            refNode.prev = node;\n            if (refNode === this.head) {\n                this.head = node;\n            }\n        }\n        else if (this.tail != null) {\n            this.tail.next = node;\n            node.prev = this.tail;\n            this.tail = node;\n        }\n        else {\n            node.prev = null;\n            this.head = this.tail = node;\n        }\n        this.length += 1;\n    };\n    LinkedList.prototype.offset = function (target) {\n        var index = 0, cur = this.head;\n        while (cur != null) {\n            if (cur === target)\n                return index;\n            index += cur.length();\n            cur = cur.next;\n        }\n        return -1;\n    };\n    LinkedList.prototype.remove = function (node) {\n        if (!this.contains(node))\n            return;\n        if (node.prev != null)\n            node.prev.next = node.next;\n        if (node.next != null)\n            node.next.prev = node.prev;\n        if (node === this.head)\n            this.head = node.next;\n        if (node === this.tail)\n            this.tail = node.prev;\n        this.length -= 1;\n    };\n    LinkedList.prototype.iterator = function (curNode) {\n        if (curNode === void 0) { curNode = this.head; }\n        // TODO use yield when we can\n        return function () {\n            var ret = curNode;\n            if (curNode != null)\n                curNode = curNode.next;\n            return ret;\n        };\n    };\n    LinkedList.prototype.find = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            var length_1 = cur.length();\n            if (index < length_1 ||\n                (inclusive && index === length_1 && (cur.next == null || cur.next.length() !== 0))) {\n                return [cur, index];\n            }\n            index -= length_1;\n        }\n        return [null, 0];\n    };\n    LinkedList.prototype.forEach = function (callback) {\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            callback(cur);\n        }\n    };\n    LinkedList.prototype.forEachAt = function (index, length, callback) {\n        if (length <= 0)\n            return;\n        var _a = this.find(index), startNode = _a[0], offset = _a[1];\n        var cur, curIndex = index - offset, next = this.iterator(startNode);\n        while ((cur = next()) && curIndex < index + length) {\n            var curLength = cur.length();\n            if (index > curIndex) {\n                callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));\n            }\n            else {\n                callback(cur, 0, Math.min(curLength, index + length - curIndex));\n            }\n            curIndex += curLength;\n        }\n    };\n    LinkedList.prototype.map = function (callback) {\n        return this.reduce(function (memo, cur) {\n            memo.push(callback(cur));\n            return memo;\n        }, []);\n    };\n    LinkedList.prototype.reduce = function (callback, memo) {\n        var cur, next = this.iterator();\n        while ((cur = next())) {\n            memo = callback(memo, cur);\n        }\n        return memo;\n    };\n    return LinkedList;\n}());\nexports.default = LinkedList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/collection/linked-list.ts\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar container_1 = require(\"./abstract/container\");\nvar Registry = require(\"../registry\");\nvar OBSERVER_CONFIG = {\n    attributes: true,\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true,\n};\nvar MAX_OPTIMIZE_ITERATIONS = 100;\nvar ScrollBlot = /** @class */ (function (_super) {\n    __extends(ScrollBlot, _super);\n    function ScrollBlot(node) {\n        var _this = _super.call(this, node) || this;\n        _this.scroll = _this;\n        _this.observer = new MutationObserver(function (mutations) {\n            _this.update(mutations);\n        });\n        _this.observer.observe(_this.domNode, OBSERVER_CONFIG);\n        _this.attach();\n        return _this;\n    }\n    ScrollBlot.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        this.observer.disconnect();\n    };\n    ScrollBlot.prototype.deleteAt = function (index, length) {\n        this.update();\n        if (index === 0 && length === this.length()) {\n            this.children.forEach(function (child) {\n                child.remove();\n            });\n        }\n        else {\n            _super.prototype.deleteAt.call(this, index, length);\n        }\n    };\n    ScrollBlot.prototype.formatAt = function (index, length, name, value) {\n        this.update();\n        _super.prototype.formatAt.call(this, index, length, name, value);\n    };\n    ScrollBlot.prototype.insertAt = function (index, value, def) {\n        this.update();\n        _super.prototype.insertAt.call(this, index, value, def);\n    };\n    ScrollBlot.prototype.optimize = function (mutations, context) {\n        var _this = this;\n        if (mutations === void 0) { mutations = []; }\n        if (context === void 0) { context = {}; }\n        _super.prototype.optimize.call(this, context);\n        // We must modify mutations directly, cannot make copy and then modify\n        var records = [].slice.call(this.observer.takeRecords());\n        // Array.push currently seems to be implemented by a non-tail recursive function\n        // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n        while (records.length > 0)\n            mutations.push(records.pop());\n        // TODO use WeakMap\n        var mark = function (blot, markParent) {\n            if (markParent === void 0) { markParent = true; }\n            if (blot == null || blot === _this)\n                return;\n            if (blot.domNode.parentNode == null)\n                return;\n            // @ts-ignore\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations = [];\n            }\n            if (markParent)\n                mark(blot.parent);\n        };\n        var optimize = function (blot) {\n            // Post-order traversal\n            if (\n            // @ts-ignore\n            blot.domNode[Registry.DATA_KEY] == null ||\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations == null) {\n                return;\n            }\n            if (blot instanceof container_1.default) {\n                blot.children.forEach(optimize);\n            }\n            blot.optimize(context);\n        };\n        var remaining = mutations;\n        for (var i = 0; remaining.length > 0; i += 1) {\n            if (i >= MAX_OPTIMIZE_ITERATIONS) {\n                throw new Error('[Parchment] Maximum optimize iterations reached');\n            }\n            remaining.forEach(function (mutation) {\n                var blot = Registry.find(mutation.target, true);\n                if (blot == null)\n                    return;\n                if (blot.domNode === mutation.target) {\n                    if (mutation.type === 'childList') {\n                        mark(Registry.find(mutation.previousSibling, false));\n                        [].forEach.call(mutation.addedNodes, function (node) {\n                            var child = Registry.find(node, false);\n                            mark(child, false);\n                            if (child instanceof container_1.default) {\n                                child.children.forEach(function (grandChild) {\n                                    mark(grandChild, false);\n                                });\n                            }\n                        });\n                    }\n                    else if (mutation.type === 'attributes') {\n                        mark(blot.prev);\n                    }\n                }\n                mark(blot);\n            });\n            this.children.forEach(optimize);\n            remaining = [].slice.call(this.observer.takeRecords());\n            records = remaining.slice();\n            while (records.length > 0)\n                mutations.push(records.pop());\n        }\n    };\n    ScrollBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        if (context === void 0) { context = {}; }\n        mutations = mutations || this.observer.takeRecords();\n        // TODO use WeakMap\n        mutations\n            .map(function (mutation) {\n            var blot = Registry.find(mutation.target, true);\n            if (blot == null)\n                return null;\n            // @ts-ignore\n            if (blot.domNode[Registry.DATA_KEY].mutations == null) {\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations = [mutation];\n                return blot;\n            }\n            else {\n                // @ts-ignore\n                blot.domNode[Registry.DATA_KEY].mutations.push(mutation);\n                return null;\n            }\n        })\n            .forEach(function (blot) {\n            if (blot == null ||\n                blot === _this ||\n                //@ts-ignore\n                blot.domNode[Registry.DATA_KEY] == null)\n                return;\n            // @ts-ignore\n            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);\n        });\n        // @ts-ignore\n        if (this.domNode[Registry.DATA_KEY].mutations != null) {\n            // @ts-ignore\n            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);\n        }\n        this.optimize(mutations, context);\n    };\n    ScrollBlot.blotName = 'scroll';\n    ScrollBlot.defaultChild = 'block';\n    ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;\n    ScrollBlot.tagName = 'DIV';\n    return ScrollBlot;\n}(container_1.default));\nexports.default = ScrollBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/scroll.ts\n// module id = 12\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar format_1 = require(\"./abstract/format\");\nvar Registry = require(\"../registry\");\n// Shallow object comparison\nfunction isEqual(obj1, obj2) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length)\n        return false;\n    // @ts-ignore\n    for (var prop in obj1) {\n        // @ts-ignore\n        if (obj1[prop] !== obj2[prop])\n            return false;\n    }\n    return true;\n}\nvar InlineBlot = /** @class */ (function (_super) {\n    __extends(InlineBlot, _super);\n    function InlineBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InlineBlot.formats = function (domNode) {\n        if (domNode.tagName === InlineBlot.tagName)\n            return undefined;\n        return _super.formats.call(this, domNode);\n    };\n    InlineBlot.prototype.format = function (name, value) {\n        var _this = this;\n        if (name === this.statics.blotName && !value) {\n            this.children.forEach(function (child) {\n                if (!(child instanceof format_1.default)) {\n                    child = child.wrap(InlineBlot.blotName, true);\n                }\n                _this.attributes.copy(child);\n            });\n            this.unwrap();\n        }\n        else {\n            _super.prototype.format.call(this, name, value);\n        }\n    };\n    InlineBlot.prototype.formatAt = function (index, length, name, value) {\n        if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {\n            var blot = this.isolate(index, length);\n            blot.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    InlineBlot.prototype.optimize = function (context) {\n        _super.prototype.optimize.call(this, context);\n        var formats = this.formats();\n        if (Object.keys(formats).length === 0) {\n            return this.unwrap(); // unformatted span\n        }\n        var next = this.next;\n        if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {\n            next.moveChildren(this);\n            next.remove();\n        }\n    };\n    InlineBlot.blotName = 'inline';\n    InlineBlot.scope = Registry.Scope.INLINE_BLOT;\n    InlineBlot.tagName = 'SPAN';\n    return InlineBlot;\n}(format_1.default));\nexports.default = InlineBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/inline.ts\n// module id = 13\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar format_1 = require(\"./abstract/format\");\nvar Registry = require(\"../registry\");\nvar BlockBlot = /** @class */ (function (_super) {\n    __extends(BlockBlot, _super);\n    function BlockBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BlockBlot.formats = function (domNode) {\n        var tagName = Registry.query(BlockBlot.blotName).tagName;\n        if (domNode.tagName === tagName)\n            return undefined;\n        return _super.formats.call(this, domNode);\n    };\n    BlockBlot.prototype.format = function (name, value) {\n        if (Registry.query(name, Registry.Scope.BLOCK) == null) {\n            return;\n        }\n        else if (name === this.statics.blotName && !value) {\n            this.replaceWith(BlockBlot.blotName);\n        }\n        else {\n            _super.prototype.format.call(this, name, value);\n        }\n    };\n    BlockBlot.prototype.formatAt = function (index, length, name, value) {\n        if (Registry.query(name, Registry.Scope.BLOCK) != null) {\n            this.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    BlockBlot.prototype.insertAt = function (index, value, def) {\n        if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {\n            // Insert text or inline\n            _super.prototype.insertAt.call(this, index, value, def);\n        }\n        else {\n            var after = this.split(index);\n            var blot = Registry.create(value, def);\n            after.parent.insertBefore(blot, after);\n        }\n    };\n    BlockBlot.prototype.update = function (mutations, context) {\n        if (navigator.userAgent.match(/Trident/)) {\n            this.build();\n        }\n        else {\n            _super.prototype.update.call(this, mutations, context);\n        }\n    };\n    BlockBlot.blotName = 'block';\n    BlockBlot.scope = Registry.Scope.BLOCK_BLOT;\n    BlockBlot.tagName = 'P';\n    return BlockBlot;\n}(format_1.default));\nexports.default = BlockBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/block.ts\n// module id = 14\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar leaf_1 = require(\"./abstract/leaf\");\nvar EmbedBlot = /** @class */ (function (_super) {\n    __extends(EmbedBlot, _super);\n    function EmbedBlot() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EmbedBlot.formats = function (domNode) {\n        return undefined;\n    };\n    EmbedBlot.prototype.format = function (name, value) {\n        // super.formatAt wraps, which is what we want in general,\n        // but this allows subclasses to overwrite for formats\n        // that just apply to particular embeds\n        _super.prototype.formatAt.call(this, 0, this.length(), name, value);\n    };\n    EmbedBlot.prototype.formatAt = function (index, length, name, value) {\n        if (index === 0 && length === this.length()) {\n            this.format(name, value);\n        }\n        else {\n            _super.prototype.formatAt.call(this, index, length, name, value);\n        }\n    };\n    EmbedBlot.prototype.formats = function () {\n        return this.statics.formats(this.domNode);\n    };\n    return EmbedBlot;\n}(leaf_1.default));\nexports.default = EmbedBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/embed.ts\n// module id = 15\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar leaf_1 = require(\"./abstract/leaf\");\nvar Registry = require(\"../registry\");\nvar TextBlot = /** @class */ (function (_super) {\n    __extends(TextBlot, _super);\n    function TextBlot(node) {\n        var _this = _super.call(this, node) || this;\n        _this.text = _this.statics.value(_this.domNode);\n        return _this;\n    }\n    TextBlot.create = function (value) {\n        return document.createTextNode(value);\n    };\n    TextBlot.value = function (domNode) {\n        var text = domNode.data;\n        // @ts-ignore\n        if (text['normalize'])\n            text = text['normalize']();\n        return text;\n    };\n    TextBlot.prototype.deleteAt = function (index, length) {\n        this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);\n    };\n    TextBlot.prototype.index = function (node, offset) {\n        if (this.domNode === node) {\n            return offset;\n        }\n        return -1;\n    };\n    TextBlot.prototype.insertAt = function (index, value, def) {\n        if (def == null) {\n            this.text = this.text.slice(0, index) + value + this.text.slice(index);\n            this.domNode.data = this.text;\n        }\n        else {\n            _super.prototype.insertAt.call(this, index, value, def);\n        }\n    };\n    TextBlot.prototype.length = function () {\n        return this.text.length;\n    };\n    TextBlot.prototype.optimize = function (context) {\n        _super.prototype.optimize.call(this, context);\n        this.text = this.statics.value(this.domNode);\n        if (this.text.length === 0) {\n            this.remove();\n        }\n        else if (this.next instanceof TextBlot && this.next.prev === this) {\n            this.insertAt(this.length(), this.next.value());\n            this.next.remove();\n        }\n    };\n    TextBlot.prototype.position = function (index, inclusive) {\n        if (inclusive === void 0) { inclusive = false; }\n        return [this.domNode, index];\n    };\n    TextBlot.prototype.split = function (index, force) {\n        if (force === void 0) { force = false; }\n        if (!force) {\n            if (index === 0)\n                return this;\n            if (index === this.length())\n                return this.next;\n        }\n        var after = Registry.create(this.domNode.splitText(index));\n        this.parent.insertBefore(after, this.next);\n        this.text = this.statics.value(this.domNode);\n        return after;\n    };\n    TextBlot.prototype.update = function (mutations, context) {\n        var _this = this;\n        if (mutations.some(function (mutation) {\n            return mutation.type === 'characterData' && mutation.target === _this.domNode;\n        })) {\n            this.text = this.statics.value(this.domNode);\n        }\n    };\n    TextBlot.prototype.value = function () {\n        return this.text;\n    };\n    TextBlot.blotName = 'text';\n    TextBlot.scope = Registry.Scope.INLINE_BLOT;\n    return TextBlot;\n}(leaf_1.default));\nexports.default = TextBlot;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/blot/text.ts\n// module id = 16\n// module chunks = 0"],"sourceRoot":""},"metadata":{},"sourceType":"script"}